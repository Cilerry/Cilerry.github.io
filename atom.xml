<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RedLeavesBlog</title>
  
  
  <link href="http://www.red0819.top/atom.xml" rel="self"/>
  
  <link href="http://www.red0819.top/"/>
  <updated>2020-09-18T10:50:45.432Z</updated>
  <id>http://www.red0819.top/</id>
  
  <author>
    <name>Snow Monster</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JVM原理以及垃圾回收简单介绍</title>
    <link href="http://www.red0819.top/uncategorized/JVM%E5%8E%9F%E7%90%86%E4%BB%A5%E5%8F%8A%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
    <id>http://www.red0819.top/uncategorized/JVM%E5%8E%9F%E7%90%86%E4%BB%A5%E5%8F%8A%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</id>
    <published>2020-09-18T10:50:45.000Z</published>
    <updated>2020-09-18T10:50:45.432Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Azkaban介绍</title>
    <link href="http://www.red0819.top/uncategorized/Azkaban%E4%BB%8B%E7%BB%8D/"/>
    <id>http://www.red0819.top/uncategorized/Azkaban%E4%BB%8B%E7%BB%8D/</id>
    <published>2020-09-18T03:01:17.000Z</published>
    <updated>2020-09-18T03:01:17.067Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hive基础（三）</title>
    <link href="http://www.red0819.top/uncategorized/Hive%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://www.red0819.top/uncategorized/Hive%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2020-09-18T03:00:52.000Z</published>
    <updated>2020-09-18T03:00:52.529Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hive基础（二）</title>
    <link href="http://www.red0819.top/uncategorized/Hive%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://www.red0819.top/uncategorized/Hive%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-09-18T03:00:46.000Z</published>
    <updated>2020-09-18T03:00:46.793Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hive基础（一）</title>
    <link href="http://www.red0819.top/uncategorized/Hive%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://www.red0819.top/uncategorized/Hive%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-09-18T03:00:41.000Z</published>
    <updated>2020-09-18T03:00:41.888Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Kafka基础（一）</title>
    <link href="http://www.red0819.top/uncategorized/Kafka%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://www.red0819.top/uncategorized/Kafka%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-09-18T02:59:54.000Z</published>
    <updated>2020-09-18T02:59:54.793Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Kafka基础（二）</title>
    <link href="http://www.red0819.top/uncategorized/Kafka%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://www.red0819.top/uncategorized/Kafka%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-09-18T02:59:48.000Z</published>
    <updated>2020-09-18T02:59:48.985Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Kafka基础（三）</title>
    <link href="http://www.red0819.top/uncategorized/Kafka%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://www.red0819.top/uncategorized/Kafka%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2020-09-18T02:59:44.000Z</published>
    <updated>2020-09-18T02:59:44.423Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hbase基础（三）</title>
    <link href="http://www.red0819.top/uncategorized/Hbase%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://www.red0819.top/uncategorized/Hbase%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2020-09-18T02:59:27.000Z</published>
    <updated>2020-09-18T02:59:27.887Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hbase基础（二）</title>
    <link href="http://www.red0819.top/uncategorized/Hbase%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://www.red0819.top/uncategorized/Hbase%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-09-18T02:59:22.000Z</published>
    <updated>2020-09-18T02:59:22.164Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hbase基础(（一）</title>
    <link href="http://www.red0819.top/uncategorized/Hbase%E5%9F%BA%E7%A1%80-%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://www.red0819.top/uncategorized/Hbase%E5%9F%BA%E7%A1%80-%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-09-18T02:59:10.000Z</published>
    <updated>2020-09-18T02:59:10.189Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>常用端口号一览（二）</title>
    <link href="http://www.red0819.top/tools/%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3%E5%8F%B7%E4%B8%80%E8%A7%88%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://www.red0819.top/tools/%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3%E5%8F%B7%E4%B8%80%E8%A7%88%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-09-17T11:03:26.000Z</published>
    <updated>2020-09-17T11:42:42.377Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>TCP 端口（动态端口）</p><table><thead><tr><th>端口类型</th><th>端口号</th><th>注释</th></tr></thead><tbody><tr><td>TCP</td><td>1024</td><td>NetSpy.698(YAI)</td></tr><tr><td>TCP</td><td>1025</td><td>NetSpy.698,Unused Windows Services Block</td></tr><tr><td>TCP</td><td>1026</td><td>Unused Windows Services Block</td></tr><tr><td>TCP</td><td>1027</td><td>Unused Windows Services Block</td></tr><tr><td>TCP</td><td>1028</td><td>Unused Windows Services Block</td></tr><tr><td>TCP</td><td>1029</td><td>Unused Windows Services Block</td></tr><tr><td>TCP</td><td>1030</td><td>Unused Windows Services Block</td></tr><tr><td>TCP</td><td>1033</td><td>Netspy</td></tr><tr><td>TCP</td><td>1035</td><td>Multidropper</td></tr><tr><td>TCP</td><td>1042</td><td>Bla</td></tr><tr><td>TCP</td><td>1045</td><td>Rasmin</td></tr><tr><td>TCP</td><td>1047</td><td>GateCrasher</td></tr><tr><td>TCP</td><td>1050</td><td>MiniCommand</td></tr><tr><td>TCP</td><td>1059</td><td>nimreg</td></tr><tr><td>TCP</td><td>1069</td><td>Backdoor.TheefServer.202</td></tr><tr><td>TCP</td><td>1070</td><td>Voice,Psyber Stream Server,Streaming Audio Trojan</td></tr><tr><td>TCP</td><td>1080</td><td>Wingate,Worm.BugBear.B,Worm.Novarg.B</td></tr><tr><td>TCP</td><td>1090</td><td>Xtreme,VDOLive</td></tr><tr><td>TCP</td><td>1092</td><td>LoveGate</td></tr><tr><td>TCP</td><td>1095</td><td>Rat</td></tr><tr><td>TCP</td><td>1097</td><td>Rat</td></tr><tr><td>TCP</td><td>1098</td><td>Rat</td></tr><tr><td>TCP</td><td>1099</td><td>Rat</td></tr><tr><td>TCP</td><td>1110</td><td>nfsd-keepalive</td></tr><tr><td>TCP</td><td>1111</td><td>Backdoor.AIMVision</td></tr><tr><td>TCP</td><td>1155</td><td>Network File Access</td></tr><tr><td>TCP</td><td>1170</td><td>Psyber Stream Server,Streaming Audio trojan,Voice</td></tr><tr><td>TCP</td><td>1200</td><td>NoBackO</td></tr><tr><td>TCP</td><td>1201</td><td>NoBackO</td></tr><tr><td>TCP</td><td>1207</td><td>Softwar</td></tr><tr><td>TCP</td><td>1212</td><td>Nirvana,Visul Killer</td></tr><tr><td>TCP</td><td>1234</td><td>Ultors</td></tr><tr><td>TCP</td><td>1243</td><td>BackDoor-G,SubSeven,SubSeven Apocalypse</td></tr><tr><td>TCP</td><td>1245</td><td>VooDoo Doll</td></tr><tr><td>TCP</td><td>1269</td><td>Mavericks Matrix</td></tr><tr><td>TCP</td><td>1313</td><td>Nirvana</td></tr><tr><td>TCP</td><td>1349</td><td>BioNet</td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">1433</font></strong></td><td><strong><font color="blue">Microsoft SQL服务</font></strong></td></tr><tr><td>TCP</td><td>1441</td><td>Remote Storm</td></tr><tr><td>TCP</td><td>1492</td><td>FTP99CMP(BackOriffice.FTP)</td></tr><tr><td>TCP</td><td>1503</td><td>NetMeeting T.120</td></tr><tr><td>TCP</td><td>1509</td><td>Psyber Streaming Server</td></tr><tr><td>TCP</td><td>1600</td><td>Shivka-Burka</td></tr><tr><td>TCP</td><td>1688</td><td>Key Management Service(密钥管理服务)</td></tr><tr><td>TCP</td><td>1703</td><td>Exloiter 1.1</td></tr><tr><td>TCP</td><td>1720</td><td>NetMeeting H.233 call Setup</td></tr><tr><td>TCP</td><td>1723</td><td>VPN 网关（PPTP）</td></tr><tr><td>TCP</td><td>1731</td><td>NetMeeting音频调用控制</td></tr><tr><td>TCP</td><td>1807</td><td>SpySender</td></tr><tr><td>TCP</td><td>1966</td><td>Fake FTP 2000</td></tr><tr><td>TCP</td><td>1976</td><td>Custom port</td></tr><tr><td>TCP</td><td>1981</td><td>Shockrave</td></tr><tr><td>TCP</td><td>1990</td><td>stun-p1 cisco STUN Priority 1 port</td></tr><tr><td>TCP</td><td>1990</td><td>stun-p1 cisco STUN Priority 1 port</td></tr><tr><td>TCP</td><td>1991</td><td>stun-p2 cisco STUN Priority 2 port</td></tr><tr><td>TCP</td><td>1992</td><td>stun-p3 cisco STUN Priority 3 port,ipsendmsg IPsendmsg</td></tr><tr><td>TCP</td><td>1993</td><td>snmp-tcp-port cisco SNMP TCP port</td></tr><tr><td>TCP</td><td>1994</td><td>stun-port cisco serial tunnel port</td></tr><tr><td>TCP</td><td>1995</td><td>perf-port cisco perf port</td></tr><tr><td>TCP</td><td>1996</td><td>tr-rsrb-port cisco Remote SRB port</td></tr><tr><td>TCP</td><td>1997</td><td>gdp-port cisco Gateway Discovery Protocol</td></tr><tr><td>TCP</td><td>1998</td><td>x25-svc-port cisco X.25 service (XOT)</td></tr><tr><td>TCP</td><td>1999</td><td>BackDoor,TransScout</td></tr><tr><td>TCP</td><td>2000</td><td>Der Spaeher,INsane Network</td></tr><tr><td>TCP</td><td>2002</td><td>W32. Beagle .AX @mm</td></tr><tr><td>TCP</td><td>2001</td><td>Transmisson scout</td></tr><tr><td>TCP</td><td>2002</td><td>Transmisson scout</td></tr><tr><td>TCP</td><td>2003</td><td>Transmisson scout</td></tr><tr><td>TCP</td><td>2004</td><td>Transmisson scout</td></tr><tr><td>TCP</td><td>2005</td><td>TTransmisson scout</td></tr><tr><td>TCP</td><td>2011</td><td>cypress</td></tr><tr><td>TCP</td><td>2015</td><td>raid-cs</td></tr><tr><td>TCP</td><td>2023</td><td>Ripper,Pass Ripper,Hack City Ripper Pro</td></tr><tr><td>TCP</td><td>2049</td><td>NFS</td></tr><tr><td>TCP</td><td>2115</td><td>Bugs</td></tr><tr><td>TCP</td><td>2121</td><td>Nirvana</td></tr><tr><td>TCP</td><td>2140</td><td>Deep Throat,The Invasor</td></tr><tr><td>TCP</td><td>2155</td><td>Nirvana</td></tr><tr><td>TCP</td><td>2208</td><td>RuX</td></tr><tr><td>TCP</td><td>2255</td><td>Illusion Mailer</td></tr><tr><td>TCP</td><td>2283</td><td>HVL Rat5</td></tr><tr><td>TCP</td><td>2300</td><td>PC Explorer</td></tr><tr><td>TCP</td><td>2311</td><td>Studio54</td></tr><tr><td>TCP</td><td>2556</td><td>Worm.Bbeagle.q</td></tr><tr><td>TCP</td><td>2565</td><td>Striker</td></tr><tr><td>TCP</td><td>2583</td><td>WinCrash</td></tr><tr><td>TCP</td><td>2600</td><td>Digital RootBeer</td></tr><tr><td>TCP</td><td>2716</td><td>Prayer Trojan</td></tr><tr><td>TCP</td><td>2745</td><td>Worm.BBeagle.k</td></tr><tr><td>TCP</td><td>2773</td><td>Backdoor,SubSeven</td></tr><tr><td>TCP</td><td>2774</td><td>SubSeven2.1&amp;2.2</td></tr><tr><td>TCP</td><td>2801</td><td>Phineas Phucker</td></tr><tr><td>TCP</td><td>2989</td><td>Rat</td></tr><tr><td>TCP</td><td>3024</td><td>WinCrash trojan</td></tr><tr><td>TCP</td><td>3127</td><td>Worm.Novarg</td></tr><tr><td>TCP</td><td>3128</td><td>RingZero,Worm.Novarg.B</td></tr><tr><td>TCP</td><td>3129</td><td>Masters Paradise</td></tr><tr><td>TCP</td><td>3150</td><td>Deep Throat,The Invasor</td></tr><tr><td>TCP</td><td>3198</td><td>Worm.Novarg</td></tr><tr><td>TCP</td><td>3210</td><td>SchoolBus</td></tr><tr><td>TCP</td><td>3332</td><td>Worm.Cycle.a</td></tr><tr><td>TCP</td><td>3333</td><td>Prosiak</td></tr><tr><td>TCP</td><td>3389</td><td>超级终端（远程桌面）</td></tr><tr><td>TCP</td><td>3456</td><td>Terror</td></tr><tr><td>TCP</td><td>3459</td><td>Eclipse 2000</td></tr><tr><td>TCP</td><td>3700</td><td>Portal of Doom</td></tr><tr><td>TCP</td><td>3791</td><td>Eclypse</td></tr><tr><td>TCP</td><td>3801</td><td>Eclypse</td></tr><tr><td>TCP</td><td>3996</td><td>Portal of Doom,RemoteAnything</td></tr><tr><td>TCP</td><td>4000</td><td>腾讯QQ客户端</td></tr><tr><td>TCP</td><td>4060</td><td>Portal of Doom,RemoteAnything</td></tr><tr><td>TCP</td><td>4092</td><td>WinCrash</td></tr><tr><td>TCP</td><td>4242</td><td>VHM</td></tr><tr><td>TCP</td><td>4267</td><td>SubSeven2.1&amp;2.2</td></tr><tr><td>TCP</td><td>4321</td><td>BoBo</td></tr><tr><td>TCP</td><td>4444</td><td>Prosiak,Swift remote</td></tr><tr><td>TCP</td><td>4500</td><td>W32.HLLW.Tufas</td></tr><tr><td>TCP</td><td>4567</td><td>File Nail</td></tr><tr><td>TCP</td><td>4590</td><td>ICQTrojan</td></tr><tr><td>TCP</td><td>4899</td><td>Remote Administrator服务器</td></tr><tr><td>TCP</td><td>4950</td><td>ICQTrojan</td></tr><tr><td>TCP</td><td>5000</td><td>WindowsXP服务器，Blazer 5,Bubbel,Back Door Setup,Sockets de Troie</td></tr><tr><td>TCP</td><td>5001</td><td>Back Door Setup,Sockets de Troie</td></tr><tr><td>TCP</td><td>5002</td><td>cd00r,Shaft</td></tr><tr><td>TCP</td><td>5011</td><td>One of the Last Trojans (OOTLT)</td></tr><tr><td>TCP</td><td>5025</td><td>WM Remote KeyLogger</td></tr><tr><td>TCP</td><td>5031</td><td>Firehotcker,Metropolitan,NetMetro</td></tr><tr><td>TCP</td><td>5032</td><td>Metropolitan</td></tr><tr><td>TCP</td><td>5190</td><td>ICQ Query</td></tr><tr><td>TCP</td><td>5321</td><td>Firehotcker</td></tr><tr><td>TCP</td><td>5333</td><td>Backage Trojan Box 3</td></tr><tr><td>TCP</td><td>5343</td><td>WCrat</td></tr><tr><td>TCP</td><td>5400</td><td>Blade Runner,BackConstruction1.2</td></tr><tr><td>TCP</td><td>5401</td><td>Blade Runner,Back Construction</td></tr><tr><td>TCP</td><td>5402</td><td>Blade Runner,Back Construction</td></tr><tr><td>TCP</td><td>5471</td><td>WinCrash</td></tr><tr><td>TCP</td><td>5512</td><td>Illusion Mailer</td></tr><tr><td>TCP</td><td>5521</td><td>Illusion Mailer</td></tr><tr><td>TCP</td><td>5550</td><td>Xtcp,INsane Network</td></tr><tr><td>TCP</td><td>5554</td><td>Worm.Sasser</td></tr><tr><td>TCP</td><td>5555</td><td>ServeMe</td></tr><tr><td>TCP</td><td>5556</td><td>BO Facil</td></tr><tr><td>TCP</td><td>5557</td><td>BO Facil</td></tr><tr><td>TCP</td><td>5569</td><td>Robo-Hack</td></tr><tr><td>TCP</td><td>5598</td><td>BackDoor 2.03</td></tr><tr><td>TCP</td><td>5631</td><td>PCAnyWhere data</td></tr><tr><td>TCP</td><td>5632</td><td>PCAnyWhere</td></tr><tr><td>TCP</td><td>5637</td><td>PC Crasher</td></tr><tr><td>TCP</td><td>5638</td><td>PC Crasher</td></tr><tr><td>TCP</td><td>5698</td><td>BackDoor</td></tr><tr><td>TCP</td><td>5714</td><td>Wincrash3</td></tr><tr><td>TCP</td><td>5741</td><td>WinCrash3</td></tr><tr><td>TCP</td><td>5742</td><td>WinCrash</td></tr><tr><td>TCP</td><td>5760</td><td>Portmap Remote Root Linux Exploit</td></tr><tr><td>TCP</td><td>5880</td><td>Y3K RAT</td></tr><tr><td>TCP</td><td>5881</td><td>Y3K RAT</td></tr><tr><td>TCP</td><td>5882</td><td>Y3K RAT</td></tr><tr><td>TCP</td><td>5888</td><td>Y3K RAT</td></tr><tr><td>TCP</td><td>5889</td><td>Y3K RAT</td></tr><tr><td>TCP</td><td>5900</td><td>WinVnc</td></tr><tr><td>TCP</td><td>6000</td><td>Backdoor.AB</td></tr><tr><td>TCP</td><td>6006</td><td>Noknok8</td></tr><tr><td>TCP</td><td>6129</td><td>Dameware Nt Utilities服务器</td></tr><tr><td>TCP</td><td>6272</td><td>SecretService</td></tr><tr><td>TCP</td><td>6267</td><td>广外女生</td></tr><tr><td>TCP</td><td>6400</td><td>Backdoor.AB,The Thing</td></tr><tr><td>TCP</td><td>6500</td><td>Devil 1.03</td></tr><tr><td>TCP</td><td>6661</td><td>Teman</td></tr><tr><td>TCP</td><td>6666</td><td>TCPshell.c</td></tr><tr><td>TCP</td><td>6667</td><td>NT Remote Control,Wise 播放器接收端口</td></tr><tr><td>TCP</td><td>6668</td><td>Wise Video广播端口</td></tr><tr><td>TCP</td><td>6669</td><td>Vampyre</td></tr><tr><td>TCP</td><td>6670</td><td>DeepThroat,iPhone</td></tr><tr><td>TCP</td><td>6671</td><td>Deep Throat 3.0</td></tr><tr><td>TCP</td><td>6711</td><td>SubSeven</td></tr><tr><td>TCP</td><td>6712</td><td>SubSeven1.x</td></tr><tr><td>TCP</td><td>6713</td><td>SubSeven</td></tr><tr><td>TCP</td><td>6723</td><td>Mstream</td></tr><tr><td>TCP</td><td>6767</td><td>NT Remote Control</td></tr><tr><td>TCP</td><td>6771</td><td>DeepThroat</td></tr><tr><td>TCP</td><td>6776</td><td>BackDoor-G,SubSeven,2000 Cracks</td></tr><tr><td>TCP</td><td>6777</td><td>Worm.BBeagle</td></tr><tr><td>TCP</td><td>6789</td><td>Doly Trojan</td></tr><tr><td>TCP</td><td>6838</td><td>Mstream</td></tr><tr><td>TCP</td><td>6883</td><td>DeltaSource</td></tr><tr><td>TCP</td><td>6912</td><td>Shit Heep</td></tr><tr><td>TCP</td><td>6939</td><td>Indoctrination</td></tr><tr><td>TCP</td><td>6969</td><td>GateCrasher,Priority,IRC 3</td></tr><tr><td>TCP</td><td>6970</td><td>RealAudio,GateCrasher</td></tr><tr><td>TCP</td><td>7000</td><td>Remote Grab,NetMonitor,SubSeven1.x</td></tr><tr><td>TCP</td><td>7001</td><td>Freak88</td></tr><tr><td>TCP</td><td>7201</td><td>NetMonitor</td></tr><tr><td>TCP</td><td>7215</td><td>BackDoor-G,SubSeven</td></tr><tr><td>TCP</td><td>7001</td><td>Freak88,Freak2k</td></tr><tr><td>TCP</td><td>7300</td><td>NetMonitor</td></tr><tr><td>TCP</td><td>7301</td><td>NetMonitor</td></tr><tr><td>TCP</td><td>7306</td><td>NetMonitor,NetSpy 1.0</td></tr><tr><td>TCP</td><td>7307</td><td>NetMonitor,ProcSpy</td></tr><tr><td>TCP</td><td>7308</td><td>NetMonitor,X Spy</td></tr><tr><td>TCP</td><td>7323</td><td>Sygate服务器端</td></tr><tr><td>TCP</td><td>7424</td><td>Host Control</td></tr><tr><td>TCP</td><td>7511</td><td>聪明基因</td></tr><tr><td>TCP</td><td>7597</td><td>Qaz</td></tr><tr><td>TCP</td><td>7609</td><td>Snid X2</td></tr><tr><td>TCP</td><td>7626</td><td>冰河</td></tr><tr><td>TCP</td><td>7777</td><td>The Thing</td></tr><tr><td>TCP</td><td>7789</td><td>Back Door Setup,ICQKiller</td></tr><tr><td>TCP</td><td>7983</td><td>Mstream</td></tr><tr><td>TCP</td><td>8000</td><td>腾讯OICQ服务器端，XDMA</td></tr><tr><td>TCP</td><td>8010</td><td>Wingate,Logfile</td></tr><tr><td>TCP</td><td>8011</td><td>WAY2.4</td></tr><tr><td>TCP</td><td>8080</td><td>WWW 代理，Ring Zero,Chubo,Worm.Novarg.B</td></tr><tr><td>TCP</td><td>8102</td><td>网络神偷</td></tr><tr><td>TCP</td><td>8181</td><td>W32.Erkez.D@mm</td></tr><tr><td>TCP</td><td>8520</td><td>W32.Socay.Worm</td></tr><tr><td>TCP</td><td>8594</td><td>I-Worm/Bozori.a</td></tr><tr><td>TCP</td><td>8787</td><td>BackOfrice 2000</td></tr><tr><td>TCP</td><td>8888</td><td>Winvnc</td></tr><tr><td>TCP</td><td>8897</td><td>Hack Office,Armageddon</td></tr><tr><td>TCP</td><td>8989</td><td>Recon</td></tr><tr><td>TCP</td><td>9000</td><td>Netministrator</td></tr><tr><td>TCP</td><td>9325</td><td>Mstream</td></tr><tr><td>TCP</td><td>9400</td><td>InCommand 1.0</td></tr><tr><td>TCP</td><td>9401</td><td>InCommand 1.0</td></tr><tr><td>TCP</td><td>9402</td><td>InCommand 1.0</td></tr><tr><td>TCP</td><td>9872</td><td>Portal of Doom</td></tr><tr><td>TCP</td><td>9873</td><td>Portal of Doom</td></tr><tr><td>TCP</td><td>9874</td><td>Portal of Doom</td></tr><tr><td>TCP</td><td>9875</td><td>Portal of Doom</td></tr><tr><td>TCP</td><td>9876</td><td>Cyber Attacker</td></tr><tr><td>TCP</td><td>9878</td><td>TransScout</td></tr><tr><td>TCP</td><td>9989</td><td>Ini-Killer</td></tr><tr><td>TCP</td><td>9898</td><td>Worm.Win32.Dabber.a</td></tr><tr><td>TCP</td><td>9999</td><td>Prayer Trojan</td></tr><tr><td>TCP</td><td>10067</td><td>Portal of Doom</td></tr><tr><td>TCP</td><td>10080</td><td>Worm.Novarg.B</td></tr><tr><td>TCP</td><td>10084</td><td>Syphillis</td></tr><tr><td>TCP</td><td>10085</td><td>Syphillis</td></tr><tr><td>TCP</td><td>10086</td><td>Syphillis</td></tr><tr><td>TCP</td><td>10101</td><td>BrainSpy</td></tr><tr><td>TCP</td><td>10167</td><td>Portal Of Doom</td></tr><tr><td>TCP</td><td>10168</td><td>Worm.Supnot.78858.c,Worm.LovGate.T</td></tr><tr><td>TCP</td><td>10520</td><td>Acid Shivers</td></tr><tr><td>TCP</td><td>10607</td><td>Coma trojan</td></tr><tr><td>TCP</td><td>10666</td><td>Ambush</td></tr><tr><td>TCP</td><td>11000</td><td>Senna Spy</td></tr><tr><td>TCP</td><td>11050</td><td>Host Control</td></tr><tr><td>TCP</td><td>11051</td><td>Host Control</td></tr><tr><td>TCP</td><td>11223</td><td>Progenic,Hack ’99KeyLogger</td></tr><tr><td>TCP</td><td>11831</td><td>TROJ_LATINUS.SVR</td></tr><tr><td>TCP</td><td>12076</td><td>Gjamer,MSH.104b</td></tr><tr><td>TCP</td><td>12223</td><td>Hack’99 KeyLogger</td></tr><tr><td>TCP</td><td>12345</td><td>GabanBus,NetBus 1.6/1.7,Pie Bill Gates,X-bill</td></tr><tr><td>TCP</td><td>12346</td><td>GabanBus,NetBus 1.6/1.7,X-bill</td></tr><tr><td>TCP</td><td>12349</td><td>BioNet</td></tr><tr><td>TCP</td><td>12361</td><td>Whack-a-mole</td></tr><tr><td>TCP</td><td>12362</td><td>Whack-a-mole</td></tr><tr><td>TCP</td><td>12363</td><td>Whack-a-mole</td></tr><tr><td>TCP</td><td>12378</td><td>W32/Gibe@MM</td></tr><tr><td>TCP</td><td>12456</td><td>NetBus</td></tr><tr><td>TCP</td><td>12623</td><td>DUN Control</td></tr><tr><td>TCP</td><td>12624</td><td>Buttman</td></tr><tr><td>TCP</td><td>12631</td><td>WhackJob,WhackJob.NB1.7</td></tr><tr><td>TCP</td><td>12701</td><td>Eclipse2000</td></tr><tr><td>TCP</td><td>12754</td><td>Mstream</td></tr><tr><td>TCP</td><td>13000</td><td>Senna Spy</td></tr><tr><td>TCP</td><td>13010</td><td>Hacker Brazil</td></tr><tr><td>TCP</td><td>13013</td><td>Psychward</td></tr><tr><td>TCP</td><td>13223</td><td>Tribal Voice的聊天程序PowWow</td></tr><tr><td>TCP</td><td>13700</td><td>Kuang2 The Virus</td></tr><tr><td>TCP</td><td>14456</td><td>Solero</td></tr><tr><td>TCP</td><td>14500</td><td>PC Invader</td></tr><tr><td>TCP</td><td>14501</td><td>PC Invader</td></tr><tr><td>TCP</td><td>14502</td><td>PC Invader</td></tr><tr><td>TCP</td><td>14503</td><td>PC Invader</td></tr><tr><td>TCP</td><td>15000</td><td>NetDaemon 1.0</td></tr><tr><td>TCP</td><td>15092</td><td>Host Control</td></tr><tr><td>TCP</td><td>15104</td><td>Mstream</td></tr><tr><td>TCP</td><td>16484</td><td>Mosucker</td></tr><tr><td>TCP</td><td>16660</td><td>Stacheldraht (DDoS)</td></tr><tr><td>TCP</td><td>16772</td><td>ICQ Revenge</td></tr><tr><td>TCP</td><td>16959</td><td>Priority</td></tr><tr><td>TCP</td><td>16969</td><td>Priority</td></tr><tr><td>TCP</td><td>17027</td><td>提供广告服务的Conducent”adbot”共享软件</td></tr><tr><td>TCP</td><td>17166</td><td>Mosaic</td></tr><tr><td>TCP</td><td>17300</td><td>Kuang2 The Virus</td></tr><tr><td>TCP</td><td>17490</td><td>CrazyNet</td></tr><tr><td>TCP</td><td>17500</td><td>CrazyNet</td></tr><tr><td>TCP</td><td>17569</td><td>Infector 1.4.x + 1.6.x</td></tr><tr><td>TCP</td><td>17777</td><td>Nephron</td></tr><tr><td>TCP</td><td>18753</td><td>Shaft (DDoS)</td></tr><tr><td>TCP</td><td>19191</td><td>蓝色火焰</td></tr><tr><td>TCP</td><td>19864</td><td>ICQ Revenge</td></tr><tr><td>TCP</td><td>20000</td><td>Millennium II (GrilFriend)</td></tr><tr><td>TCP</td><td>20001</td><td>Millennium II (GrilFriend)</td></tr><tr><td>TCP</td><td>20002</td><td>AcidkoR</td></tr><tr><td>TCP</td><td>20034</td><td>NetBus 2 Pro</td></tr><tr><td>TCP</td><td>20168</td><td>Lovgate</td></tr><tr><td>TCP</td><td>20203</td><td>Logged,Chupacabra</td></tr><tr><td>TCP</td><td>20331</td><td>Bla</td></tr><tr><td>TCP</td><td>20432</td><td>Shaft (DDoS)</td></tr><tr><td>TCP</td><td>20808</td><td>Worm.LovGate.v.QQ</td></tr><tr><td>TCP</td><td>21335</td><td>Tribal Flood Network,Trinoo</td></tr><tr><td>TCP</td><td>21544</td><td>Schwindler 1.82,GirlFriend</td></tr><tr><td>TCP</td><td>21554</td><td>Schwindler 1.82,GirlFriend,Exloiter 1.0.1.2</td></tr><tr><td>TCP</td><td>22222</td><td>Prosiak,RuXUploader2.0</td></tr><tr><td>TCP</td><td>22784</td><td>Backdoor.Intruzzo</td></tr><tr><td>TCP</td><td>23432</td><td>Asylum 0.1.3</td></tr><tr><td>TCP</td><td>23444</td><td>网络公牛</td></tr><tr><td>TCP</td><td>23456</td><td>Evil FTP,Ugly FTP,WhackJob</td></tr><tr><td>TCP</td><td>23476</td><td>Donald Dick</td></tr><tr><td>TCP</td><td>23477</td><td>Donald Dick</td></tr><tr><td>TCP</td><td>23777</td><td>INet Spy</td></tr><tr><td>TCP</td><td>26274</td><td>Delta</td></tr><tr><td>TCP</td><td>26681</td><td>Spy Voice</td></tr><tr><td>TCP</td><td>27374</td><td>Sub Seven 2.0+,Backdoor.Baste</td></tr><tr><td>TCP</td><td>27444</td><td>Tribal Flood Network,Trinoo</td></tr><tr><td>TCP</td><td>27665</td><td>Tribal Flood Network,Trinoo</td></tr><tr><td>TCP</td><td>29431</td><td>Hack Attack</td></tr><tr><td>TCP</td><td>29432</td><td>Hack Attack</td></tr><tr><td>TCP</td><td>29104</td><td>Host Control</td></tr><tr><td>TCP</td><td>29559</td><td>TROJ_LATINUS.SVR</td></tr><tr><td>TCP</td><td>29891</td><td>The Unexplained</td></tr><tr><td>TCP</td><td>30001</td><td>Terr0r32</td></tr><tr><td>TCP</td><td>30003</td><td>Death,Lamers Death</td></tr><tr><td>TCP</td><td>30029</td><td>AOL trojan</td></tr><tr><td>TCP</td><td>30100</td><td>NetSphere 1.27a,NetSphere 1.31</td></tr><tr><td>TCP</td><td>30101</td><td>NetSphere 1.31,NetSphere 1.27a</td></tr><tr><td>TCP</td><td>30102</td><td>NetSphere 1.27a,NetSphere 1.31</td></tr><tr><td>TCP</td><td>30103</td><td>NetSphere 1.31</td></tr><tr><td>TCP</td><td>30303</td><td>Sockets de Troie</td></tr><tr><td>TCP</td><td>30722</td><td>W32.Esbot.A</td></tr><tr><td>TCP</td><td>30947</td><td>Intruse</td></tr><tr><td>TCP</td><td>30999</td><td>Kuang2</td></tr><tr><td>TCP</td><td>31336</td><td>Bo Whack</td></tr><tr><td>TCP</td><td>31337</td><td>Baron Night,BO client,BO2,Bo Facil,BackFire,Back Orifice,DeepBO,Freak2k,NetSpy</td></tr><tr><td>TCP</td><td>31338</td><td>NetSpy,Back Orifice,DeepBO</td></tr><tr><td>TCP</td><td>31339</td><td>NetSpy DK</td></tr><tr><td>TCP</td><td>31554</td><td>Schwindler</td></tr><tr><td>TCP</td><td>31666</td><td>BOWhack</td></tr><tr><td>TCP</td><td>31778</td><td>Hack Attack</td></tr><tr><td>TCP</td><td>31785</td><td>Hack Attack</td></tr><tr><td>TCP</td><td>31787</td><td>Hack Attack</td></tr><tr><td>TCP</td><td>31789</td><td>Hack Attack</td></tr><tr><td>TCP</td><td>31791</td><td>Hack Attack</td></tr><tr><td>TCP</td><td>31792</td><td>Hack Attack</td></tr><tr><td>TCP</td><td>32100</td><td>PeanutBrittle</td></tr><tr><td>TCP</td><td>32418</td><td>Acid Battery</td></tr><tr><td>TCP</td><td>33333</td><td>Prosiak,Blakharaz 1.0</td></tr><tr><td>TCP</td><td>33577</td><td>Son Of Psychward</td></tr><tr><td>TCP</td><td>33777</td><td>Son Of Psychward</td></tr><tr><td>TCP</td><td>33911</td><td>Spirit 2001a</td></tr><tr><td>TCP</td><td>34324</td><td>BigGluck,TN,Tiny Telnet Server</td></tr><tr><td>TCP</td><td>34555</td><td>Trin00 (Windows) (DDoS)</td></tr><tr><td>TCP</td><td>35555</td><td>Trin00 (Windows) (DDoS)</td></tr><tr><td>TCP</td><td>36794</td><td>Worm.Bugbear-A</td></tr><tr><td>TCP</td><td>37651</td><td>YAT</td></tr><tr><td>TCP</td><td>40412</td><td>The Spy</td></tr><tr><td>TCP</td><td>40421</td><td>Agent 40421,Masters Paradise.96</td></tr><tr><td>TCP</td><td>40422</td><td>Masters Paradise</td></tr><tr><td>TCP</td><td>40423</td><td>Masters Paradise.97</td></tr><tr><td>TCP</td><td>40425</td><td>Masters Paradise</td></tr><tr><td>TCP</td><td>40426</td><td>Masters Paradise 3.x</td></tr><tr><td>TCP</td><td>41666</td><td>Remote Boot</td></tr><tr><td>TCP</td><td>43210</td><td>Schoolbus 1.6/2.0</td></tr><tr><td>TCP</td><td>44444</td><td>Delta Source</td></tr><tr><td>TCP</td><td>44445</td><td>Happypig</td></tr><tr><td>TCP</td><td>45576</td><td>未知代理</td></tr><tr><td>TCP</td><td>47252</td><td>Prosiak</td></tr><tr><td>TCP</td><td>47262</td><td>Delta</td></tr><tr><td>TCP</td><td>47878</td><td>BirdSpy2</td></tr><tr><td>TCP</td><td>49301</td><td>Online Keylogger</td></tr><tr><td>TCP</td><td>50505</td><td>Sockets de Troie</td></tr><tr><td>TCP</td><td>50766</td><td>Fore,Schwindler</td></tr><tr><td>TCP</td><td>51966</td><td>CafeIni</td></tr><tr><td>TCP</td><td>53001</td><td>Remote Windows Shutdown</td></tr><tr><td>TCP</td><td>53217</td><td>Acid Battery 2000</td></tr><tr><td>TCP</td><td>54283</td><td>Back Door-G,Sub7</td></tr><tr><td>TCP</td><td>54320</td><td>Back Orifice 2000,Sheep</td></tr><tr><td>TCP</td><td>54321</td><td>School Bus .69-1.11,Sheep,BO2K</td></tr><tr><td>TCP</td><td>57341</td><td>NetRaider</td></tr><tr><td>TCP</td><td>58008</td><td>BackDoor.Tron</td></tr><tr><td>TCP</td><td>58009</td><td>BackDoor.Tron</td></tr><tr><td>TCP</td><td>58339</td><td>ButtFunnel</td></tr><tr><td>TCP</td><td>59211</td><td>BackDoor.DuckToy</td></tr><tr><td>TCP</td><td>60000</td><td>Deep Throat</td></tr><tr><td>TCP</td><td>60068</td><td>Xzip 6000068</td></tr><tr><td>TCP</td><td>60268</td><td>DaYangou_bigppig</td></tr><tr><td>TCP</td><td>60411</td><td>Connection</td></tr><tr><td>TCP</td><td>60606</td><td>TROJ_BCKDOR.G2.A</td></tr><tr><td>TCP</td><td>61466</td><td>Telecommando</td></tr><tr><td>TCP</td><td>61603</td><td>Bunker-kill</td></tr><tr><td>TCP</td><td>63485</td><td>Bunker-kill</td></tr><tr><td>TCP</td><td>65000</td><td>Devil,DDoS</td></tr><tr><td>TCP</td><td>65432</td><td>Th3tr41t0r,The Traitor</td></tr><tr><td>TCP</td><td>65530</td><td>TROJ_WINMITE.10</td></tr><tr><td>TCP</td><td>65535</td><td>RC,Adore Worm/Linux</td></tr></tbody></table><p>整理来自于：今天超市开门了吗</p><p>（非本人整理）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="工具集" scheme="http://www.red0819.top/categories/tools/"/>
    
    
    <category term="常用端口" scheme="http://www.red0819.top/tags/%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>常用端口号一览（三）</title>
    <link href="http://www.red0819.top/tools/%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3%E5%8F%B7%E4%B8%80%E8%A7%88%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://www.red0819.top/tools/%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3%E5%8F%B7%E4%B8%80%E8%A7%88%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2020-09-17T11:03:26.000Z</published>
    <updated>2020-09-17T11:42:39.689Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>UDP 端口（静态端口）</p><table><thead><tr><th>端口类型</th><th>端口号</th><th>注释</th></tr></thead><tbody><tr><td>UDP</td><td>1</td><td>Sockets des Troie</td></tr><tr><td>UDP</td><td>9</td><td>Chargen</td></tr><tr><td>UDP</td><td>19</td><td>Chargen</td></tr><tr><td>UDP</td><td>69</td><td>Pasana</td></tr><tr><td>UDP</td><td>80</td><td>Penrox</td></tr><tr><td>UDP</td><td>371</td><td>ClearCase版本管理软件</td></tr><tr><td><strong><font color="blue">UDP</font></strong></td><td><strong><font color="blue">445</font></strong></td><td><strong><font color="blue">公共Internet文件系统（CIFS)</font></strong></td></tr><tr><td>UDP</td><td>500</td><td>Internet密钥交换（IP安全性 ,IKE)</td></tr><tr><td>UDP</td><td>520</td><td>Rip</td></tr></tbody></table><p>整理来自于：今天超市开门了吗</p><p>（非本人整理）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="工具集" scheme="http://www.red0819.top/categories/tools/"/>
    
    
    <category term="常用端口" scheme="http://www.red0819.top/tags/%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>常用端口号一览（四）</title>
    <link href="http://www.red0819.top/tools/%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3%E5%8F%B7%E4%B8%80%E8%A7%88%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>http://www.red0819.top/tools/%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3%E5%8F%B7%E4%B8%80%E8%A7%88%EF%BC%88%E5%9B%9B%EF%BC%89/</id>
    <published>2020-09-17T11:03:26.000Z</published>
    <updated>2020-09-17T11:42:36.301Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>UDP 端口（动态端口）</p><table><thead><tr><th>端口类型</th><th>端口号</th><th>注释</th></tr></thead><tbody><tr><td>UDP</td><td>1025</td><td>Maverick’s Matrix 1.2 - 2.0</td></tr><tr><td>UDP</td><td>1026</td><td>Remote Explorer 2000</td></tr><tr><td>UDP</td><td>1027</td><td>UC聊天软件，Trojan.Huigezi.e</td></tr><tr><td>UDP</td><td>1028</td><td>3721上网助手（用途不明，建议用户警惕！），KiLo,SubSARI</td></tr><tr><td>UDP</td><td>1029</td><td>SubSARI</td></tr><tr><td>UDP</td><td>1031</td><td>Xot</td></tr><tr><td>UDP</td><td>1032</td><td>Akosch4</td></tr><tr><td>UDP</td><td>1104</td><td>RexxRave</td></tr><tr><td>UDP</td><td>1111</td><td>Daodan</td></tr><tr><td>UDP</td><td>1116</td><td>Lurker</td></tr><tr><td>UDP</td><td>1122</td><td>Last 2000,Singularity</td></tr><tr><td>UDP</td><td>1183</td><td>Cyn,SweetHeart</td></tr><tr><td>UDP</td><td>1200</td><td>NoBackO</td></tr><tr><td>UDP</td><td>1201</td><td>NoBackO</td></tr><tr><td>UDP</td><td>1342</td><td>BLA trojan</td></tr><tr><td>UDP</td><td>1344</td><td>Ptakks</td></tr><tr><td>UDP</td><td>1349</td><td>BO dll</td></tr><tr><td>UDP</td><td>1561</td><td>MuSka52</td></tr><tr><td>UDP</td><td>1701</td><td>VPN网关（L2TP）</td></tr><tr><td>UDP</td><td>1772</td><td>NetControle</td></tr><tr><td>UDP</td><td>1978</td><td>Slapper</td></tr><tr><td>UDP</td><td>1985</td><td>Black Diver</td></tr><tr><td>UDP</td><td>2000</td><td>A-trojan,Fear,Force,GOTHIC Intruder,Last 2000,Real 2000</td></tr><tr><td>UDP</td><td>2001</td><td>Scalper</td></tr><tr><td>UDP</td><td>2002</td><td>Slapper</td></tr><tr><td>UDP</td><td>2015</td><td>raid-cs</td></tr><tr><td>UDP</td><td>2018</td><td>rellpack</td></tr><tr><td>UDP</td><td>2130</td><td>Mini BackLash</td></tr><tr><td>UDP</td><td>2140</td><td>Deep Throat,Foreplay,The Invasor</td></tr><tr><td>UDP</td><td>2222</td><td>SweetHeart,Way</td></tr><tr><td>UDP</td><td>2339</td><td>Voice Spy</td></tr><tr><td>UDP</td><td>2702</td><td>Black Diver</td></tr><tr><td>UDP</td><td>2989</td><td>RAT</td></tr><tr><td>UDP</td><td>3150</td><td>Deep Throat</td></tr><tr><td>UDP</td><td>3215</td><td>XHX</td></tr><tr><td>UDP</td><td>3333</td><td>Daodan</td></tr><tr><td>UDP</td><td>3801</td><td>Eclypse</td></tr><tr><td>UDP</td><td>3996</td><td>Remote Anything</td></tr><tr><td>UDP</td><td>4128</td><td>RedShad</td></tr><tr><td>UDP</td><td>4156</td><td>Slapper</td></tr><tr><td>UDP</td><td>4500</td><td>sae-urn/ (IP安全性，IKE NAT遍历）</td></tr><tr><td>UDP</td><td>5419</td><td>DarkSky</td></tr><tr><td>UDP</td><td>5503</td><td>Remote Shell Trojan</td></tr><tr><td>UDP</td><td>5555</td><td>Daodan</td></tr><tr><td>UDP</td><td>5882</td><td>Y3K RAT</td></tr><tr><td>UDP</td><td>5888</td><td>Y3K RAT</td></tr><tr><td>UDP</td><td>6112</td><td>Battle .net Game</td></tr><tr><td>UDP</td><td>6666</td><td>KiLo</td></tr><tr><td>UDP</td><td>6667</td><td>KiLo</td></tr><tr><td>UDP</td><td>6766</td><td>KiLo</td></tr><tr><td>UDP</td><td>6767</td><td>KiLo,UandMe</td></tr><tr><td>UDP</td><td>6838</td><td>Mstream Agent-handler</td></tr><tr><td>UDP</td><td>7028</td><td>未知木马</td></tr><tr><td>UDP</td><td>7424</td><td>Host Control</td></tr><tr><td>UDP</td><td>7788</td><td>Singularity</td></tr><tr><td>UDP</td><td>7983</td><td>MStream handler-agent</td></tr><tr><td>UDP</td><td>8012</td><td>Ptakks</td></tr><tr><td>UDP</td><td>8090</td><td>Aphex’s Remote Packet Sniffer</td></tr><tr><td>UDP</td><td>8127</td><td>9_119,Chonker</td></tr><tr><td>UDP</td><td>8488</td><td>KiLo</td></tr><tr><td>UDP</td><td>8489</td><td>KiLo</td></tr><tr><td>UDP</td><td>8787</td><td>BackOrifice 2000</td></tr><tr><td>UDP</td><td>8879</td><td>BackOrifice 2000</td></tr><tr><td>UDP</td><td>9325</td><td>MStream Agent-handler</td></tr><tr><td>UDP</td><td>10000</td><td>XHX</td></tr><tr><td>UDP</td><td>10067</td><td>Portal of Doom</td></tr><tr><td>UDP</td><td>10084</td><td>Syphillis</td></tr><tr><td>UDP</td><td>10100</td><td>Slapper</td></tr><tr><td>UDP</td><td>10167</td><td>Portal of Doom</td></tr><tr><td>UDP</td><td>10498</td><td>Mstream</td></tr><tr><td>UDP</td><td>10666</td><td>Ambush</td></tr><tr><td>UDP</td><td>11225</td><td>Cyn</td></tr><tr><td>UDP</td><td>12321</td><td>Protoss</td></tr><tr><td>UDP</td><td>12345</td><td>BlueIce 2000</td></tr><tr><td>UDP</td><td>12378</td><td>W32/Gibe@MM</td></tr><tr><td>UDP</td><td>12623</td><td>ButtMan,DUN Control</td></tr><tr><td>UDP</td><td>15210</td><td>UDP remote shell backdoor server</td></tr><tr><td>UDP</td><td>15486</td><td>KiLo</td></tr><tr><td>UDP</td><td>16514</td><td>KiLo</td></tr><tr><td>UDP</td><td>16515</td><td>KiLo</td></tr><tr><td>UDP</td><td>18753</td><td>Shaft handler to Agent</td></tr><tr><td>UDP</td><td>20433</td><td>Shaft</td></tr><tr><td>UDP</td><td>21554</td><td>GirlFriend</td></tr><tr><td>UDP</td><td>22784</td><td>Backdoor.Intruzzo</td></tr><tr><td>UDP</td><td>23476</td><td>Donald Dick</td></tr><tr><td>UDP</td><td>25123</td><td>MOTD</td></tr><tr><td>UDP</td><td>26274</td><td>Delta Source</td></tr><tr><td>UDP</td><td>26374</td><td>Sub-7 2.1</td></tr><tr><td>UDP</td><td>26444</td><td>Trin00/TFN2K</td></tr><tr><td>UDP</td><td>26573</td><td>Sub-7 2.1</td></tr><tr><td>UDP</td><td>27184</td><td>Alvgus trojan 2000</td></tr><tr><td>UDP</td><td>27444</td><td>Trinoo</td></tr><tr><td>UDP</td><td>29589</td><td>KiLo</td></tr><tr><td>UDP</td><td>29891</td><td>The Unexplained</td></tr><tr><td>UDP</td><td>30103</td><td>NetSphere</td></tr><tr><td>UDP</td><td>31320</td><td>Little Witch</td></tr><tr><td>UDP</td><td>31335</td><td>Trin00 DoS Attack</td></tr><tr><td>UDP</td><td>31337</td><td>Baron Night,BO client,BO2,Bo Facil,BackFire,Back Orifice,DeepBO</td></tr><tr><td>UDP</td><td>31338</td><td>Back Orifice,NetSpy DK,DeepBO</td></tr><tr><td>UDP</td><td>31339</td><td>Little Witch</td></tr><tr><td>UDP</td><td>31340</td><td>Little Witch</td></tr><tr><td>UDP</td><td>31416</td><td>Lithium</td></tr><tr><td>UDP</td><td>31787</td><td>Hack aTack</td></tr><tr><td>UDP</td><td>31789</td><td>Hack aTack</td></tr><tr><td>UDP</td><td>31790</td><td>Hack aTack</td></tr><tr><td>UDP</td><td>31791</td><td>Hack aTack</td></tr><tr><td>UDP</td><td>33390</td><td>未知木马</td></tr><tr><td>UDP</td><td>34555</td><td>Trinoo</td></tr><tr><td>UDP</td><td>35555</td><td>Trinoo</td></tr><tr><td>UDP</td><td>43720</td><td>KiLo</td></tr><tr><td>UDP</td><td>44014</td><td>Iani</td></tr><tr><td>UDP</td><td>44767</td><td>School Bus</td></tr><tr><td>UDP</td><td>46666</td><td>Taskman</td></tr><tr><td>UDP</td><td>47262</td><td>Delta Source</td></tr><tr><td>UDP</td><td>47785</td><td>KiLo</td></tr><tr><td>UDP</td><td>49301</td><td>OnLine keyLogger</td></tr><tr><td>UDP</td><td>49683</td><td>Fenster</td></tr><tr><td>UDP</td><td>49698</td><td>KiLo</td></tr><tr><td>UDP</td><td>52901</td><td>Omega</td></tr><tr><td>UDP</td><td>54320</td><td>Back Orifice</td></tr><tr><td>UDP</td><td>54321</td><td>Back Orifice 2000</td></tr><tr><td>UDP</td><td>54341</td><td>NetRaider Trojan</td></tr><tr><td>UDP</td><td>61746</td><td>KiLO</td></tr><tr><td>UDP</td><td>61747</td><td>KiLO</td></tr><tr><td>UDP</td><td>61748</td><td>KiLO</td></tr><tr><td>UDP</td><td>65432</td><td>The Traitor</td></tr></tbody></table><p>整理来自于：今天超市开门了吗</p><p>（非本人整理）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="工具集" scheme="http://www.red0819.top/categories/tools/"/>
    
    
    <category term="常用端口" scheme="http://www.red0819.top/tags/%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>常用端口号一览（一）</title>
    <link href="http://www.red0819.top/tools/%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3%E5%8F%B7%E4%B8%80%E8%A7%88%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://www.red0819.top/tools/%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3%E5%8F%B7%E4%B8%80%E8%A7%88%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-09-17T10:39:04.000Z</published>
    <updated>2020-09-17T11:42:33.592Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><table><thead><tr><th>端口类型</th><th>端口号</th><th>注释</th></tr></thead><tbody><tr><td>TCP</td><td>0</td><td>Reserved</td></tr><tr><td>TCP</td><td>1</td><td>TCP Port Service Multiplexer</td></tr><tr><td>TCP</td><td>2</td><td>Death</td></tr><tr><td>TCP</td><td>5</td><td>Remote Job Entry,yoyo</td></tr><tr><td>TCP</td><td>7</td><td>Echo</td></tr><tr><td>TCP</td><td>11</td><td>Skun</td></tr><tr><td>TCP</td><td>12</td><td>Bomber</td></tr><tr><td>TCP</td><td>16</td><td>Skun</td></tr><tr><td>TCP</td><td>17</td><td>Skun</td></tr><tr><td>TCP</td><td>18</td><td>消息传输协议，skun</td></tr><tr><td>TCP</td><td>19</td><td>Skun</td></tr><tr><td><font color="blue"><strong>TCP</strong></font></td><td><strong><font color="blue">20</font></strong></td><td><strong><font color="blue">FTP Data,Amanda</font></strong></td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">21</font></strong></td><td><font color="blue"><strong>文件传输,Back Construction,Blade Runner,Doly Trojan,Fore,FTP trojan,Invisible FTP,Larva,WebEx,WinCrash</strong></font></td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">22</font></strong></td><td><strong><font color="blue">远程登录协议</font></strong></td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">23</font></strong></td><td><strong><font color="blue">远程登录（Telnet),Tiny Telnet Server (</font></strong></td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">25</font></strong></td><td><strong><font color="blue">电子邮件(SMTP),Ajan,Antigen,Email Password Sender,Happy 99,Kuang2,ProMail trojan,Shtrilitz,Stealth,Tapiras,Terminator,WinPC,WinSpy,Haebu Coceda</font></strong></td></tr><tr><td>TCP</td><td>27</td><td>Assasin</td></tr><tr><td>TCP</td><td>28</td><td>Amanda</td></tr><tr><td>TCP</td><td>29</td><td>MSG ICP</td></tr><tr><td>TCP</td><td>30</td><td>Agent 40421</td></tr><tr><td>TCP</td><td>31</td><td>Agent 31,Hackers Paradise,Masters Paradise,Agent 40421</td></tr><tr><td>TCP</td><td>37</td><td>Time,ADM worm</td></tr><tr><td>TCP</td><td>39</td><td>SubSARI</td></tr><tr><td>TCP</td><td>41</td><td>DeepThroat,Foreplay</td></tr><tr><td>TCP</td><td>42</td><td>Host Name Server</td></tr><tr><td>TCP</td><td>43</td><td>WHOIS</td></tr><tr><td>TCP</td><td>44</td><td>Arctic</td></tr><tr><td>TCP</td><td>48</td><td>DRAT</td></tr><tr><td>TCP</td><td>49</td><td>主机登录协议</td></tr><tr><td>TCP</td><td>50</td><td>DRAT</td></tr><tr><td>TCP</td><td>51</td><td>IMP Logical Address Maintenance,Fuck Lamers Backdoor</td></tr><tr><td>TCP</td><td>52</td><td>MuSka52,Skun</td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">53</font></strong></td><td><strong><font color="blue">DNS,Bonk (DOS Exploit)</font></strong></td></tr><tr><td>TCP</td><td>54</td><td>MuSka52</td></tr><tr><td>TCP</td><td>58</td><td>DMSetup</td></tr><tr><td>TCP</td><td>59</td><td>DMSetup</td></tr><tr><td>TCP</td><td>63</td><td>whois++</td></tr><tr><td>TCP</td><td>64</td><td>Communications Integrator</td></tr><tr><td>TCP</td><td>65</td><td>TACACS-Database Service</td></tr><tr><td>TCP</td><td>66</td><td>Oracle SQL*NET,AL-Bareki</td></tr><tr><td>TCP</td><td>67</td><td>Bootstrap Protocol Server</td></tr><tr><td>TCP</td><td>68</td><td>Bootstrap Protocol Client</td></tr><tr><td>TCP</td><td>69</td><td>TFTP,W32.Evala.Worm,BackGate Kit,Nimda,Pasana,Storm,Storm worm,Theef,Worm.Cycle.a</td></tr><tr><td>TCP</td><td>70</td><td>Gopher服务，ADM worm</td></tr><tr><td>TCP</td><td>79</td><td>用户查询（Finger),Firehotcker,ADM worm</td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">80</font></strong></td><td><strong><font color="blue">超文本服务器（Http),Executor,RingZero</font></strong></td></tr><tr><td>TCP</td><td>81</td><td>Chubo,Worm.Bbeagle.q</td></tr><tr><td>TCP</td><td>82</td><td>Netsky-Z</td></tr><tr><td>TCP</td><td>88</td><td>Kerberos krb5服务</td></tr><tr><td>TCP</td><td>99</td><td>Hidden Port</td></tr><tr><td>TCP</td><td>102</td><td>消息传输代理</td></tr><tr><td>TCP</td><td>108</td><td>SNA网关访问服务器</td></tr><tr><td>TCP</td><td>109</td><td>Pop2</td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">110</font></strong></td><td><strong><font color="blue">电子邮件（Pop3),ProMail</font></strong></td></tr><tr><td>TCP</td><td>113</td><td>Kazimas,Auther Idnet</td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">115</font></strong></td><td><strong><font color="blue">简单文件传输协议</font></strong></td></tr><tr><td>TCP</td><td>118</td><td>SQL Services,Infector 1.4.2</td></tr><tr><td>TCP</td><td>119</td><td>新闻组传输协议（Newsgroup(Nntp)),Happy 99</td></tr><tr><td>TCP</td><td>121</td><td>JammerKiller,Bo jammerkillah</td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">123</font></strong></td><td><strong><font color="blue">网络时间协议(NTP),Net Controller</font></strong></td></tr><tr><td>TCP</td><td>129</td><td>Password Generator Protocol</td></tr><tr><td>TCP</td><td>133</td><td>Infector 1.x</td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">135</font></strong></td><td><strong><font color="blue">微软DCE RPC end-point mapper服务</font></strong></td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">137</font></strong></td><td><strong><font color="blue">微软Netbios Name服务（网上邻居传输文件使用）</font></strong></td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">138</font></strong></td><td><strong><font color="blue">微软Netbios Name服务（网上邻居传输文件使用）</font></strong></td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">139</font></strong></td><td><strong><font color="blue">微软Netbios Name服务（用于文件及打印机共享）</font></strong></td></tr><tr><td>TCP</td><td>142</td><td>NetTaxi</td></tr><tr><td>TCP</td><td>143</td><td>Internet 邮件访问协议版本 4（IMAP4)</td></tr><tr><td>TCP</td><td>146</td><td>FC Infector,Infector</td></tr><tr><td>TCP</td><td>150</td><td>NetBIOS Session Service</td></tr><tr><td>TCP</td><td>156</td><td>SQL服务器</td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">161</font></strong></td><td><strong><font color="blue">Snmp</font></strong></td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">162</font></strong></td><td><strong><font color="blue">Snmp-Trap</font></strong></td></tr><tr><td>TCP</td><td>170</td><td>A-Trojan</td></tr><tr><td>TCP</td><td>177</td><td>X Display管理控制协议</td></tr><tr><td>TCP</td><td>179</td><td>Border网关协议（BGP)</td></tr><tr><td>TCP</td><td>190</td><td>网关访问控制协议（GACP)</td></tr><tr><td>TCP</td><td>194</td><td>Irc</td></tr><tr><td>TCP</td><td>197</td><td>目录定位服务（DLS)</td></tr><tr><td>TCP</td><td>220</td><td>Internet 邮件访问协议版本 3（IMAP3)</td></tr><tr><td>TCP</td><td>256</td><td>Nirvana</td></tr><tr><td>TCP</td><td>315</td><td>The Invasor</td></tr><tr><td>TCP</td><td>371</td><td>ClearCase版本管理软件</td></tr><tr><td>TCP</td><td>389</td><td>Lightweight Directory Access Protocol (LDAP)</td></tr><tr><td>TCP</td><td>396</td><td>Novell Netware over IP</td></tr><tr><td>TCP</td><td>420</td><td>Breach</td></tr><tr><td>TCP</td><td>421</td><td>TCP Wrappers</td></tr><tr><td><strong><font color="blue">TCP</font></strong></td><td><strong><font color="blue">443</font></strong></td><td><strong><font color="blue">安全服务（HTTPS）</font></strong></td></tr><tr><td>TCP</td><td>444</td><td>Simple Network Paging Protocol(SNPP)</td></tr><tr><td>TCP</td><td>445</td><td>Microsoft-DS</td></tr><tr><td>TCP</td><td>455</td><td>Fatal Connections</td></tr><tr><td>TCP</td><td>456</td><td>Hackers paradise,FuseSpark</td></tr><tr><td>TCP</td><td>458</td><td>苹果公司QuickTime</td></tr><tr><td>TCP</td><td>513</td><td>Grlogin</td></tr><tr><td>TCP</td><td>514</td><td>RPC Backdoor</td></tr><tr><td>TCP</td><td>531</td><td>Rasmin,Net666</td></tr><tr><td>TCP</td><td>544</td><td>kerberos kshell</td></tr><tr><td>TCP</td><td>546</td><td>DHCP Client</td></tr><tr><td>TCP</td><td>547</td><td>DHCP Server</td></tr><tr><td>TCP</td><td>548</td><td>Macintosh文件服务</td></tr><tr><td>TCP</td><td>555</td><td>Ini-Killer,Phase Zero,Stealth Spy</td></tr><tr><td>TCP</td><td>569</td><td>MSN</td></tr><tr><td>TCP</td><td>605</td><td>SecretService</td></tr><tr><td>TCP</td><td>606</td><td>Noknok8</td></tr><tr><td>TCP</td><td>660</td><td>DeepThroat</td></tr><tr><td>TCP</td><td>661</td><td>Noknok8</td></tr><tr><td>TCP</td><td>666</td><td>Attack FTP,Satanz Backdoor,Back Construction,Dark Connection Inside 1.2</td></tr><tr><td>TCP</td><td>667</td><td>Noknok7.2</td></tr><tr><td>TCP</td><td>668</td><td>Noknok6</td></tr><tr><td>TCP</td><td>669</td><td>DP trojan</td></tr><tr><td>TCP</td><td>692</td><td>GayOL</td></tr><tr><td>TCP</td><td>707</td><td>Welchia,nachi</td></tr><tr><td>TCP</td><td>777</td><td>AIM Spy</td></tr><tr><td>TCP</td><td>808</td><td>RemoteControl,WinHole</td></tr><tr><td>TCP</td><td>815</td><td>Everyone Darling</td></tr><tr><td>TCP</td><td>901</td><td>Backdoor.Devil</td></tr><tr><td>TCP</td><td>911</td><td>Dark Shadow</td></tr><tr><td>TCP</td><td>990</td><td>ssl加密</td></tr><tr><td>TCP</td><td>993</td><td>IMAP</td></tr><tr><td>TCP</td><td>999</td><td>DeepThroat</td></tr><tr><td>TCP</td><td>1000</td><td>Der Spaeher</td></tr><tr><td>TCP</td><td>1001</td><td>Silencer,WebEx,Der Spaeher</td></tr><tr><td>TCP</td><td>1003</td><td>BackDoor</td></tr><tr><td>TCP</td><td>1010</td><td>Doly</td></tr><tr><td>TCP</td><td>1011</td><td>Doly</td></tr><tr><td>TCP</td><td>1012</td><td>Doly</td></tr><tr><td>TCP</td><td>1015</td><td>Doly</td></tr><tr><td>TCP</td><td>1016</td><td>Doly</td></tr><tr><td>TCP</td><td>1020</td><td>Vampire</td></tr><tr><td>TCP</td><td>1023</td><td>Worm.Sasser.e</td></tr></tbody></table><p>整理来自于：今天超市开门了吗</p><p>（非本人整理）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="工具集" scheme="http://www.red0819.top/categories/tools/"/>
    
    
    <category term="常用端口" scheme="http://www.red0819.top/tags/%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>ETL介绍（二）</title>
    <link href="http://www.red0819.top/bigdata/ETL%E4%BB%8B%E7%BB%8D%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://www.red0819.top/bigdata/ETL%E4%BB%8B%E7%BB%8D%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-09-15T19:36:08.000Z</published>
    <updated>2020-09-19T07:34:36.692Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="ETL过程详解"><a href="#ETL过程详解" class="headerlink" title="ETL过程详解"></a>ETL过程详解</h1><p>ETL过程详解转载自：<a href="https://blog.csdn.net/weixin_34220179/article/details/85952403" target="_blank" rel="noopener">https://blog.csdn.net/weixin_34220179/article/details/85952403</a></p><h2 id="数据抽取"><a href="#数据抽取" class="headerlink" title="数据抽取"></a>数据抽取</h2><p>这一部分需要在调研阶段做大量的工作，首先要搞清楚数据是从几个业务系统中来,各个业务系统的数据库服务器运行什么DBMS,是否存在手工数据，手工数据量有多大，是否存在非结构化的数据等等，当收集完这些信息之后才可以进行数据抽取的设计。</p><p><strong>1、对于与存放DW的数据库系统相同的数据源处理方法</strong></p><p>这一类数据源在设计上比较容易。一般情况下，DBMS(SQLServer、Oracle)都会提供数据库链接功能，在DW数据库服务器和原业务系统之间建立直接的链接关系就可以写Select 语句直接访问。</p><p><strong>2、对于与DW数据库系统不同的数据源的处理方法</strong></p><p>对于这一类数据源，一般情况下也可以通过ODBC的方式建立数据库链接——如SQL Server和Oracle之间。如果不能建立数据库链接，可以有两种方式完成，一种是通过工具将源数据导出成.txt或者是.xls文件，然后再将这些源系统文件导入到ODS中。另外一种方法是通过程序接口来完成。</p><p><strong>3、对于文件类型数据源(.txt,.xls)</strong>，可以培训业务人员利用数据库工具将这些数据导入到指定的数据库，然后从指定的数据库中抽取。或者还可以借助工具实现。</p><p><strong>4、增量更新的问题</strong></p><p>对于数据量大的系统，必须考虑增量抽取。一般情况下，业务系统会记录业务发生的时间，我们可以用来做增量的标志,每次抽取之前首先判断ODS中记录最大的时间，然后根据这个时间去业务系统取大于这个时间所有的记录。利用业务系统的时间戳，一般情况下，业务系统没有或者部分有时间戳。</p><h2 id="数据的清洗转换"><a href="#数据的清洗转换" class="headerlink" title="数据的清洗转换"></a>数据的清洗转换</h2><p>ETL在转化的过程中，主要体现在：</p><p><strong>空值处理</strong>：可捕获字段空值，进行加载或替换为其他含义数据，并可根据字段空值实现分流加载到不同目标库。</p><p><strong>规范化数据格式</strong>：可实现字段格式约束定义，对于数据源中时间、数值、字符等数据，可自定义加载格式。</p><p><strong>拆分数据</strong>：依据业务需求对字段可进行分解。例，主叫号 861082585313-8148，可进行区域码和电话号码分解。</p><p><strong>验证数据正确性</strong>：可利用Lookup及拆分功能进行数据验证。例如，主叫号861082585313-8148，进行区域码和电话号码分解后，可利用Lookup返回主叫网关或交换机记载的主叫地区，进行数据验证。</p><p><strong>数据替换</strong>：对于因业务因素，可实现无效数据、缺失数据的替换。<br>Lookup：查获丢失数据 Lookup实现子查询，并返回用其他手段获取的缺失字段，保证字段完整性。</p><p><strong>建立ETL过程的主外键约束</strong>：对无依赖性的非法数据，可替换或导出到错误数据文件中，保证主键唯一记录的加载。</p><p>ETL在转化的体现转载自：<a href="https://www.cnblogs.com/Jesse-Li/p/8821893.html" target="_blank" rel="noopener">https://www.cnblogs.com/Jesse-Li/p/8821893.html</a></p><p>—————————————————————————————————————</p><h3 id="1、数据清洗"><a href="#1、数据清洗" class="headerlink" title="1、数据清洗"></a>1、数据清洗</h3><p>数据清洗的任务是过滤那些不符合要求的数据，将过滤的结果交给业务主管部门，确认是否过滤掉还是由业务单位修正之后再进行抽取。</p><p><strong>不符合要求的数据主要是有不完整的数据、错误的数据、重复的数据三大类。</strong></p><p>(1)不完整的数据：这一类数据主要是一些应该有的信息缺失，如供应商的名称、分公司的名称、客户的区域信息缺失、业务系统中主表与明细表不能匹配等。对于这一类数据过滤出来，按缺失的内容分别写入不同Excel文件向客户提交，要求在规定的时间内补全。补全后才写入数据仓库。</p><p>(2)错误的数据：这一类错误产生的原因是业务系统不够健全，在接收输入后没有进行判断直接写入后台数据库造成的，比如数值数据输成全角数字字符、字符串数据后面有一个回车操作、日期格式不正确、日期越界等。这一类数据也要分类，对于类似于全角字符、数据前后有不可见字符的问题，<strong>只能通过写SQL语句的方式找出来，然后要求客户在业务系统修正之后抽取</strong>。日期格式不正确的或者是日期越界的这一类错误会导致ETL运行失败，这一类错误需要去业务系统数据库用SQL的方式挑出来，交给业务主管部门要求限期修正，修正之后再抽取。</p><p>(3)重复的数据：对于这一类数据——特别是维表中会出现这种情况——将重复数据记录的所有字段导出来，让客户确认并整理。</p><p>数据清洗是一个反复的过程，不可能在几天内完成，只有不断的发现问题，解决问题。对于是否过滤，是否修正一般要求客户确认，对于过滤掉的数据，写入Excel文件或者将过滤数据写入数据表，在ETL开发的初期可以每天向业务单位发送过滤数据的邮件，促使他们尽快地修正错误,同时也可以做为将来验证数据的依据。数据清洗需要注意的是不要将有用的数据过滤掉，对于每个过滤规则认真进行验证，并要用户确认。</p><h3 id="2、数据转换"><a href="#2、数据转换" class="headerlink" title="2、数据转换"></a>2、数据转换</h3><p>数据转换的任务主要进行不一致的数据转换、数据粒度的转换，以及一些商务规则的计算。</p><p>(1)不一致数据转换：这个过程是一个整合的过程，将不同业务系统的相同类型的数据统一，比如同一个供应商在结算系统的编码是XX0001,而在CRM中编码是YY0001，这样在抽取过来之后统一转换成一个编码。</p><p>(2)数据粒度的转换：<strong>业务系统一般存储非常明细的数据，而数据仓库中数据是用来分析的，不需要非常明细的数据。一般情况下，</strong>会将业务系统数据按照数据仓库粒度进行聚合。</p><p>(3)<strong>商务规则的计算</strong>：不同的企业有不同的业务规则、不同的数据指标，这些指标有的时候不是简单的加加减减就能完成，这个时候需要在ETL中将这些数据指标计算好了之后存储在数据仓库中，以供分析使用。</p><h2 id="数据的加载"><a href="#数据的加载" class="headerlink" title="数据的加载"></a>数据的加载</h2><p>暂无</p><h2 id="ETL日志、警告发送"><a href="#ETL日志、警告发送" class="headerlink" title="ETL日志、警告发送"></a>ETL日志、警告发送</h2><h2 id="ETL日志"><a href="#ETL日志" class="headerlink" title="ETL日志"></a>ETL日志</h2><p>记录日志的目的是随时可以知道ETL运行情况，如果出错了，可以知道哪里出错。</p><p>ETL日志分为三类：</p><p>1、执行过程日志，这一部分日志是在ETL执行过程中每执行一步的记录，记录每次运行每一步骤的起始时间，影响了多少行数据，流水账形式。</p><p>2、错误日志，当某个模块出错的时候写错误日志，记录每次出错的时间、出错的模块以及出错的信息等。</p><p>3、日志是总体日志，只记录ETL开始时间、结束时间是否成功信息。如果使用ETL工具,ETL工具会自动产生一些日志，这一类日志也可以作为ETL日志的一部分。</p><h2 id="警告发送"><a href="#警告发送" class="headerlink" title="警告发送"></a>警告发送</h2><p>如果ETL出错了，不仅要形成ETL出错日志，而且要向系统管理员发送警告。发送警告的方式多种，一般常用的就是给系统管理员发送邮件，并附上出错的信息，方便管理员排查错误。</p><h1 id="ELT工具"><a href="#ELT工具" class="headerlink" title="ELT工具"></a>ELT工具</h1><h2 id="选择依据"><a href="#选择依据" class="headerlink" title="选择依据"></a>选择依据</h2><p>对平台的支持程度</p><p>抽取和装载的性能是不是较高，且对业务系统的性能影响大不大，侵入性高不高</p><p>对数据源的支持程度</p><p>是否具有良好的集成性和开放性</p><p>数据转换和加工的功能强不强</p><p>是否具有管理和调度的功能</p><h2 id="常见工具"><a href="#常见工具" class="headerlink" title="常见工具"></a>常见工具</h2><ol><li><p>datastage</p></li><li><p>informatica</p></li><li><p>kettle</p></li><li><p>ODI</p></li><li><p>5.Cognos</p></li><li><p>beeload</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="大数据" scheme="http://www.red0819.top/categories/bigdata/"/>
    
    
    <category term="ETL" scheme="http://www.red0819.top/tags/ETL/"/>
    
    <category term="常用名词介绍" scheme="http://www.red0819.top/tags/%E5%B8%B8%E7%94%A8%E5%90%8D%E8%AF%8D%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title>ETL介绍（一）</title>
    <link href="http://www.red0819.top/bigdata/ETL%E4%BB%8B%E7%BB%8D%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://www.red0819.top/bigdata/ETL%E4%BB%8B%E7%BB%8D%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-09-12T05:55:24.000Z</published>
    <updated>2020-09-17T11:47:04.044Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="ETL简介"><a href="#ETL简介" class="headerlink" title="ETL简介"></a>ETL简介</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>ETL （Extract-Transform-Load）用来描述将数据从来源端经过抽取（extract）、转换（transform）、加载（load）至目的端的过程。</p><p>ETL一般是指将业务系统的数据经过抽取、清洗转换之后加载到数据仓库的过程，目的是将企业中的分散、零乱、标准不统一的数据整合到一起，为企业的决策提供分析依据。较常用在数据仓库，但其对象<u>并不限于数据仓库</u>。</p><p>ETL是BI（商业智能）项目重要的一个环节。</p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p><strong>数据同步</strong>（周期型）、<strong>数据量大</strong></p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>抽取、清洗、转换、装载</p><p>抽取：是从数据库读取数据的过程。在此阶段，通常从多种不同类型的来源收集数据。</p><p>清洗：主要将不完整数据、错误数据、重复数据进行处理</p><p>转换：所提取的数据从先前的形式进入需要它的另一个数据库的形式。通过使用规则或查找表或通过将数据与其他数据组合来进行转换。</p><p>装载：将数据写入目标数据库的过程。</p><h2 id="实现方法与设计部分"><a href="#实现方法与设计部分" class="headerlink" title="实现方法与设计部分"></a>实现方法与设计部分</h2><p>实现方法：ETL工具实现、SQL方式实现、ETL工具和SQL相结合。</p><table><thead><tr><th align="center">实现方法名称</th><th align="center">优点</th><th align="center">缺点</th></tr></thead><tbody><tr><td align="center">ETL工具实现</td><td align="center">快速建立起ETL工程、减少复杂编码任务、提高速度、降低难度</td><td align="center">缺少灵活性</td></tr><tr><td align="center">SQL方式实现</td><td align="center">灵活、提高ETL运行效率</td><td align="center">编码复杂</td></tr><tr><td align="center">ETL工具和SQL相结合</td><td align="center">综合了前面二种的优点，极大地提高ETL的开发速度和效率</td><td align="center">——</td></tr></tbody></table><p>设计部分：数据抽取、数据的清洗转换、数据的加载</p><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><ol><li>ETL可以分担数据库系统的负载（采用单独的硬件服务器）</li><li>ETL相对于EL-T架构可以实现更为复杂的数据转化逻辑</li><li>ETL采用单独的硬件服务器。.</li><li>ETL与底层的数据库数据存储无关.</li></ol><h2 id="模式介绍"><a href="#模式介绍" class="headerlink" title="模式介绍"></a>模式介绍</h2><p>指路CSDN：<a href="https://blog.csdn.net/jianzhang11/article/details/104240047" target="_blank" rel="noopener">https://blog.csdn.net/jianzhang11/article/details/104240047</a></p><h1 id="ETL架构与ELT架构"><a href="#ETL架构与ELT架构" class="headerlink" title="ETL架构与ELT架构"></a>ETL架构与ELT架构</h1><p>ETL所描述的过程，一般常见的作法包含ETL或是ELT（Extract-Load-Transform），并且混合使用。通常愈大量的数据、复杂的转换逻辑、目的端为较强运算能力的数据库，愈偏向使用ELT，以便运用目的端数据库的平行处理能力。</p><h2 id="ELT"><a href="#ELT" class="headerlink" title="ELT"></a>ELT</h2><p>ELT（Extraction-Loading-Transformation）是利用数据库的处理能力，E=从源数据库抽取数据，L=把数据加载到目标库的临时表中，T=对临时表中的数据进行转换，然后加载到目标库目标表中。<br>在ELT架构中，ELT只负责提供图形化的界面来设计业务规则，数据的整个加工过程都在目标和源的数据库之间流动，ELT协调相关的数据库系统来执行相关的应用，数据加工过程既可以在源数据库端执行，也可以在目标数据仓库端执行（主要取决于系统的架构设计和数据属性）。当ETL过程需要提高效率，则可以通过对相关数据库进行调优，或者改变执行加工的服务器就可以达到。一般数据库厂商会力推该中架构，像Oracle和Teradata都极力宣传ELT架构。</p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><p>对临时表中的数据进行转换</p><h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><p>在转换服务器中进行的</p><h3 id="过程-1"><a href="#过程-1" class="headerlink" title="过程"></a>过程</h3><p>Extraction-Loading-Transformation</p><h3 id="优势-1"><a href="#优势-1" class="headerlink" title="优势"></a>优势</h3><ol><li><p>ELT主要通过数据库引擎来实现系统的可扩展性（尤其是当数据加工过程在晚上时，可以充分利用数据库引擎的资源） [2] </p></li><li><p>ELT可以保持所有的数据始终在数据库当中，避免数据的加载和导出，从而保证效率，提高系统的可监控性。</p></li><li><p>ELT可以根据数据的分布情况进行并行处理优化，并可以利用数据库的固有功能优化磁盘I/O。</p></li><li><p>ELT的可扩展性取决于数据库引擎和其硬件服务器的可扩展性。</p></li><li><p>通过对相关数据库进行性能调优，ETL过程获得3到4倍的效率提升一般不是特别困难。<br>ELT工具编辑<br>和基于ETL架构的工具（Kettle、Talend、Datastage、Informatica）相比，基于ELT架构的工具目前并不多（OWB、HaoheDI）。</p><p>优势介绍来源：<a href="https://www.cnblogs.com/Jesse-Li/p/8821893.html" target="_blank" rel="noopener">https://www.cnblogs.com/Jesse-Li/p/8821893.html</a></p></li></ol><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><p><img src="/bigdata/ETL%E4%BB%8B%E7%BB%8D%EF%BC%88%E4%B8%80%EF%BC%89/20190527181906835-1600193601044.png" alt="20190527181906835-1600193601044"></p><p>图源：<a href="https://blog.csdn.net/zhangjing5566/article/details/90609221" target="_blank" rel="noopener">https://blog.csdn.net/zhangjing5566/article/details/90609221</a></p><table><thead><tr><th align="center"></th><th align="center"><font color="green">ETL</font></th><th align="center"><font color="green">ELT</font></th></tr></thead><tbody><tr><td align="center">顺序</td><td align="center">提取 - 转换 - 装载</td><td align="center">提取 - 装载 - 转换</td></tr><tr><td align="center">速度</td><td align="center">——</td><td align="center">更快</td></tr><tr><td align="center">数据转化逻辑</td><td align="center">可实现更复杂的</td><td align="center">——</td></tr><tr><td align="center">硬件服务器</td><td align="center">单独</td><td align="center">——</td></tr><tr><td align="center">与底层的数据库数据存储关系</td><td align="center">无关</td><td align="center">所有数据都在数据库中</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="大数据" scheme="http://www.red0819.top/categories/bigdata/"/>
    
    
    <category term="ETL" scheme="http://www.red0819.top/tags/ETL/"/>
    
    <category term="常用名词介绍" scheme="http://www.red0819.top/tags/%E5%B8%B8%E7%94%A8%E5%90%8D%E8%AF%8D%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title>基础SQL题（来自牛客网）</title>
    <link href="http://www.red0819.top/uncategorized/%E5%9F%BA%E7%A1%80SQL%E9%A2%98%EF%BC%88%E6%9D%A5%E8%87%AA%E7%89%9B%E5%AE%A2%E7%BD%91%EF%BC%89/"/>
    <id>http://www.red0819.top/uncategorized/%E5%9F%BA%E7%A1%80SQL%E9%A2%98%EF%BC%88%E6%9D%A5%E8%87%AA%E7%89%9B%E5%AE%A2%E7%BD%91%EF%BC%89/</id>
    <published>2020-09-09T13:37:10.000Z</published>
    <updated>2020-09-14T21:08:55.885Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="基础SQL"><a href="#基础SQL" class="headerlink" title="基础SQL"></a>基础SQL</h1><h2 id="查找最晚入职员工的所有信息"><a href="#查找最晚入职员工的所有信息" class="headerlink" title="查找最晚入职员工的所有信息"></a>查找最晚入职员工的所有信息</h2><p>查找最晚入职员工的所有信息，为了减轻入门难度，目前所有的数据里员工入职的日期都不是同一天(sqlite里面的注释为–,mysql为comment)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE &#96;employees&#96; (</span><br><span class="line">&#96;emp_no&#96; int(11) NOT NULL, -- &#39;员工编号&#39;</span><br><span class="line">&#96;birth_date&#96; date NOT NULL,</span><br><span class="line">&#96;first_name&#96; varchar(14) NOT NULL,</span><br><span class="line">&#96;last_name&#96; varchar(16) NOT NULL,</span><br><span class="line">&#96;gender&#96; char(1) NOT NULL,</span><br><span class="line">&#96;hire_date&#96; date NOT NULL,</span><br><span class="line">PRIMARY KEY (&#96;emp_no&#96;));</span><br></pre></td></tr></table></figure><h4 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure><h4 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h4><p>示例</p><table><thead><tr><th>emp_no</th><th>birth_date</th><th>first_name</th><th>last_name</th><th>gender</th><th>hire_date</th></tr></thead><tbody><tr><td>10008</td><td>1958-02-19</td><td>Saniya</td><td>Kalloufi</td><td>M</td><td>1994-09-15</td></tr></tbody></table><h3 id="我的答案"><a href="#我的答案" class="headerlink" title="我的答案"></a>我的答案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from employees where hire_date &#x3D; (select max(hire_date) from employees );</span><br></pre></td></tr></table></figure><p>运行时间: 17ms 占用内存: 3320KB</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from employees order by hire_date desc limit 1</span><br></pre></td></tr></table></figure><p>运行时间: 11ms 占用内存: 3320KB</p><h3 id="最优答案"><a href="#最优答案" class="headerlink" title="最优答案"></a>最优答案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM employees</span><br><span class="line">WHERE hire_date &#x3D; (SELECT MAX(hire_date) FROM employees)</span><br></pre></td></tr></table></figure><p>用户：ktktktkt 运行时间: 10ms 占用内存: 3192KB</p><h2 id="查找入职员工时间排名倒数第三的员工所有信息"><a href="#查找入职员工时间排名倒数第三的员工所有信息" class="headerlink" title="查找入职员工时间排名倒数第三的员工所有信息"></a>查找入职员工时间排名倒数第三的员工所有信息</h2><p>查找入职员工时间排名倒数第三的员工所有信息，为了减轻入门难度，目前所有的数据里员工入职的日期都不是同一天</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE &#96;employees&#96; (</span><br><span class="line">&#96;emp_no&#96; int(11) NOT NULL,</span><br><span class="line">&#96;birth_date&#96; date NOT NULL,</span><br><span class="line">&#96;first_name&#96; varchar(14) NOT NULL,</span><br><span class="line">&#96;last_name&#96; varchar(16) NOT NULL,</span><br><span class="line">&#96;gender&#96; char(1) NOT NULL,</span><br><span class="line">&#96;hire_date&#96; date NOT NULL,</span><br><span class="line">PRIMARY KEY (&#96;emp_no&#96;));</span><br></pre></td></tr></table></figure><h4 id="输入描述-1"><a href="#输入描述-1" class="headerlink" title="输入描述"></a>输入描述</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure><h4 id="输出描述-1"><a href="#输出描述-1" class="headerlink" title="输出描述"></a>输出描述</h4><p>示例1</p><table><thead><tr><th>emp_no</th><th>birth_date</th><th>first_name</th><th>last_name</th><th>gender</th><th>hire_date</th></tr></thead><tbody><tr><td>10005</td><td>1955-01-21</td><td>Kyoichi</td><td>Maliniak</td><td>M</td><td>1989-09-12</td></tr></tbody></table><h3 id="我的答案-1"><a href="#我的答案-1" class="headerlink" title="我的答案"></a>我的答案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from employees </span><br><span class="line">where hire_date &#x3D; (select hire_date from employees order by hire_date desc limit 2,1</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>运行时间: 12ms 占用内存: 3364KB</p><h3 id="最优答案-1"><a href="#最优答案-1" class="headerlink" title="最优答案"></a>最优答案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select *</span><br><span class="line"> &#96;&#96;from employees</span><br><span class="line"> &#96;&#96;order by hire_date desc</span><br><span class="line"> &#96;&#96;limit &#96;&#96;2&#96;&#96;,&#96;&#96;1&#96;&#96;;</span><br></pre></td></tr></table></figure><p>用户：Howedata 运行时间: 10ms 占用内存: 3284KB</p><h2 id="查找当前薪水详情以及部门编号"><a href="#查找当前薪水详情以及部门编号" class="headerlink" title="查找当前薪水详情以及部门编号"></a>查找当前薪水详情以及部门编号</h2><p>查找最晚入职员工的所有信息，为了减轻入门难度，目前所有的数据里员工入职的日期都不是同一天(sqlite里面的注释为–,mysql为comment)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE &#96;employees&#96; (</span><br><span class="line">&#96;emp_no&#96; int(11) NOT NULL, -- &#39;员工编号&#39;</span><br><span class="line">&#96;birth_date&#96; date NOT NULL,</span><br><span class="line">&#96;first_name&#96; varchar(14) NOT NULL,</span><br><span class="line">&#96;last_name&#96; varchar(16) NOT NULL,</span><br><span class="line">&#96;gender&#96; char(1) NOT NULL,</span><br><span class="line">&#96;hire_date&#96; date NOT NULL,</span><br><span class="line">PRIMARY KEY (&#96;emp_no&#96;));</span><br></pre></td></tr></table></figure><h4 id="输入描述-2"><a href="#输入描述-2" class="headerlink" title="输入描述"></a>输入描述</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure><h4 id="输出描述-2"><a href="#输出描述-2" class="headerlink" title="输出描述"></a>输出描述</h4><p>示例</p><table><thead><tr><th>emp_no</th><th>salary</th><th>from_date</th><th>to_date</th><th>dept_no</th></tr></thead><tbody><tr><td>10002</td><td>72527</td><td>2001-08-02</td><td>9999-01-01</td><td>d001</td></tr><tr><td>10004</td><td>74057</td><td>2001-11-27</td><td>9999-01-01</td><td>d004</td></tr><tr><td>10005</td><td>94692</td><td>2001-09-09</td><td>9999-01-01</td><td>d003</td></tr><tr><td>10006</td><td>43311</td><td>2001-08-02</td><td>9999-01-01</td><td>d002</td></tr><tr><td>10010</td><td>94409</td><td>2001-11-23</td><td>9999-01-01</td><td>d006</td></tr></tbody></table><h3 id="我的答案-2"><a href="#我的答案-2" class="headerlink" title="我的答案"></a>我的答案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select sa.emp_no , sa.salary ,sa.from_date ,sa.to_date ,de.dept_no</span><br><span class="line">from </span><br><span class="line">salaries sa join dept_manager de on </span><br><span class="line">sa.emp_no &#x3D; de.emp_no</span><br><span class="line">where</span><br><span class="line">sa.to_date&#x3D;&#39;9999-01-01&#39; and de.to_date&#x3D;&#39;9999-01-01&#39;</span><br><span class="line">order by </span><br><span class="line">sa.emp_no;</span><br></pre></td></tr></table></figure><p>运行时间:12ms 占用内存: 3344KB</p><h3 id="最优答案-2"><a href="#最优答案-2" class="headerlink" title="最优答案"></a>最优答案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select salaries.*, dept_manager.dept_no from </span><br><span class="line">salaries,dept_manager on salaries.emp_no &#x3D; dept_manager.emp_no </span><br><span class="line">where salaries.to_date&#x3D;&#39;9999-01-01&#39; and dept_manager.to_date&#x3D;&#39;9999-01-01&#39;;</span><br></pre></td></tr></table></figure><p>用户：牛客326549353号 运行时间: 11ms 占用内存: 3248KB</p><h2 id="查找所有已经分配部门的员工的last-name和first-name以及dept-no"><a href="#查找所有已经分配部门的员工的last-name和first-name以及dept-no" class="headerlink" title="查找所有已经分配部门的员工的last_name和first_name以及dept_no"></a>查找所有已经分配部门的员工的last_name和first_name以及dept_no</h2><p>查找最晚入职员工的所有信息，为了减轻入门难度，目前所有的数据里员工入职的日期都不是同一天(sqlite里面的注释为–,mysql为comment)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE &#96;employees&#96; (</span><br><span class="line">&#96;emp_no&#96; int(11) NOT NULL, -- &#39;员工编号&#39;</span><br><span class="line">&#96;birth_date&#96; date NOT NULL,</span><br><span class="line">&#96;first_name&#96; varchar(14) NOT NULL,</span><br><span class="line">&#96;last_name&#96; varchar(16) NOT NULL,</span><br><span class="line">&#96;gender&#96; char(1) NOT NULL,</span><br><span class="line">&#96;hire_date&#96; date NOT NULL,</span><br><span class="line">PRIMARY KEY (&#96;emp_no&#96;));</span><br></pre></td></tr></table></figure><h4 id="输入描述-3"><a href="#输入描述-3" class="headerlink" title="输入描述"></a>输入描述</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure><h4 id="输出描述-3"><a href="#输出描述-3" class="headerlink" title="输出描述"></a>输出描述</h4><p>示例</p><table><thead><tr><th>last_name</th><th>first_name</th><th>dept_no</th></tr></thead><tbody><tr><td>Facello</td><td>Georgi</td><td>d001</td></tr><tr><td>省略</td><td>省略</td><td>省略</td></tr><tr><td>Piveteau</td><td>Duangkaew</td><td>d006</td></tr></tbody></table><h3 id="我的答案-3"><a href="#我的答案-3" class="headerlink" title="我的答案"></a>我的答案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select employees.last_name,employees.first_name,dept_emp.dept_no </span><br><span class="line">from </span><br><span class="line">employees inner join dept_emp </span><br><span class="line">on employees.emp_no&#x3D;dept_emp.emp_no</span><br></pre></td></tr></table></figure><p>运行时间:12ms 占用内存: 3300KB</p><h3 id="最优答案-3"><a href="#最优答案-3" class="headerlink" title="最优答案"></a>最优答案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select employees.last_name,employees.first_name,dept_emp.dept_no </span><br><span class="line">from employees inner join dept_emp</span><br><span class="line">on employees.emp_no&#x3D;dept_emp.emp_no</span><br></pre></td></tr></table></figure><p>用户：牛客180011609号 运行时间: 10ms 占用内存: 3300KB</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="SQL基础" scheme="http://www.red0819.top/tags/SQL%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>常用软件安装地址汇总</title>
    <link href="http://www.red0819.top/tools/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%9C%B0%E5%9D%80%E6%B1%87%E6%80%BB/"/>
    <id>http://www.red0819.top/tools/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%9C%B0%E5%9D%80%E6%B1%87%E6%80%BB/</id>
    <published>2020-09-05T18:30:09.000Z</published>
    <updated>2020-09-17T11:43:14.876Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="ETL工具"><a href="#ETL工具" class="headerlink" title="ETL工具"></a>ETL工具</h1><ol><li><p>datastage：<a href="http://pan.baidu.com/share/link?shareid=172289&amp;uk=67437475" target="_blank" rel="noopener">http://pan.baidu.com/share/link?shareid=172289&amp;uk=67437475</a></p></li><li><p>informatica：<a href="http://pan.baidu.com/share/link?shareid=183201&amp;uk=67437475" target="_blank" rel="noopener">http://pan.baidu.com/share/link?shareid=183201&amp;uk=67437475</a></p></li><li><p>kettle：<a href="http://kettle.pentaho.com/" target="_blank" rel="noopener">http://kettle.pentaho.com/</a>  </p></li><li><p>ODI: <a href="http://www.oracle.com/technetwork/cn/testcontent/index-091026-zhs.html" target="_blank" rel="noopener">www.oracle.com/technetwork/cn/testcontent/index-091026-zhs.html</a></p></li><li><p>Cognos：<a href="http://pan.baidu.com/share/link?shareid=172288&amp;uk=67437475" target="_blank" rel="noopener">http://pan.baidu.com/share/link?shareid=172288&amp;uk=67437475</a></p></li><li><p>beeload: <a href="http://www.livbee.com/" target="_blank" rel="noopener">www.livbee.com</a></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="工具集" scheme="http://www.red0819.top/categories/tools/"/>
    
    
    <category term="软件安装网址" scheme="http://www.red0819.top/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E7%BD%91%E5%9D%80/"/>
    
  </entry>
  
  <entry>
    <title>Socket入门介绍</title>
    <link href="http://www.red0819.top/computernetwork/Sockecket%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D/"/>
    <id>http://www.red0819.top/computernetwork/Sockecket%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D/</id>
    <published>2020-08-26T04:38:42.000Z</published>
    <updated>2020-09-15T16:52:18.779Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>下面进行MS-Windows、HP-Unix网络编程的实践过程中总结出来的一些经验，仅供大家参考。本文所谈到的Socket函数如果没有特别说明，都是指的Windows Socket API。</p><h1 id="Socket-API简介"><a href="#Socket-API简介" class="headerlink" title="Socket API简介"></a>Socket API简介</h1><p>Windows Socket是从UNIX Socket继承发展而来，最新的版本是2.2。进行Windows网络编程，需要在程序中包含WINSOCK2.H或MSWSOCK.H，同时需要添加引入库WS2_32. LIB或WSOCK32.LIB。</p><p>网络中用一个三元组可以在全局唯一标志一个进程： （协议，本地地址，本地端口号） ，这样一个三元组，叫做一个半相关（half-association），它指定连接的每半部分。 </p><h1 id="套接字类型"><a href="#套接字类型" class="headerlink" title="套接字类型"></a>套接字类型</h1><p>TCP/IP的socket提供下列三种类型套接字。 </p><h2 id="流式套接字（SOCK-STREAM）"><a href="#流式套接字（SOCK-STREAM）" class="headerlink" title="流式套接字（SOCK_STREAM）"></a>流式套接字（SOCK_STREAM）</h2><p>提供了一个面向连接、可靠的数据传输服务，数据无差错、无重复地发送，且按发送顺序接收。内设流量控制，避免数据流超限；数据被看作是字节流，无长度限制。文件传送协议（FTP）即使用流式套接字。 </p><h2 id="数据报式套接字（SOCK-DGRAM）"><a href="#数据报式套接字（SOCK-DGRAM）" class="headerlink" title="数据报式套接字（SOCK_DGRAM）"></a>数据报式套接字（SOCK_DGRAM）</h2><p>提供了一个无连接服务。数据包以独立包形式被发送，不提供无错保证，数据可能丢失或重复，并且接收顺序混乱。网络文件系统（NFS）使用数据报式套接字。 </p><h2 id="原始式套接字（SOCK-RAW）"><a href="#原始式套接字（SOCK-RAW）" class="headerlink" title="原始式套接字（SOCK_RAW）"></a>原始式套接字（SOCK_RAW）</h2><p>该接口允许对较低层协议，如IP、ICMP直接访问。常用于检验新的协议实现或访问现有服务中配置的新设备。 </p><h3 id="一、WSAStartup函数"><a href="#一、WSAStartup函数" class="headerlink" title="一、WSAStartup函数"></a>一、WSAStartup函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">WSAStartup</span><span class="params">( </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">WORD wVersionRequested,         <span class="comment">//使用的Socket版本</span></span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">LPWSADATA lpWSAData         <span class="comment">//返回请求的Socket的版本信息</span></span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>使用Socket的程序在使用Socket之前必须调用WSAStartup函数。该函数的第一个参数指明程序请求使用的Socket版本，其中高位字节指明副版本、低位字节指明主版本；操作系统利用第二个参数返回请求的Socket的版本信息。当一个应用程序调用WSAStartup函数时，操作系统根据请求的Socket版本来搜索相应的Socket库，然后绑定找到的Socket库到该应用程序中。以后应用程序就可以调用所请求的Socket库中的其它Socket函数了。该函数执行成功后返回0。</p><p>例：假如一个程序要使用2.1版本的Socket,那么程序代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wVersionRequested = MAKEWORD( <span class="number">2</span>, <span class="number">1</span> ); </span><br><span class="line"></span><br><span class="line">err = WSAStartup( wVersionRequested, &amp;wsaData );</span><br></pre></td></tr></table></figure><h3 id="二、WSACleanup函数"><a href="#二、WSACleanup函数" class="headerlink" title="二、WSACleanup函数"></a>二、WSACleanup函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">WSACleanup</span> <span class="params">(<span class="keyword">void</span>)</span></span>;</span><br></pre></td></tr></table></figure><p>应用程序在完成对请求的Socket库的使用后，要调用WSACleanup函数来解除与Socket库的绑定并且释放Socket库所占用的系统资源。 </p><h3 id="三、socket函数"><a href="#三、socket函数" class="headerlink" title="三、socket函数"></a>三、socket函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">SOCKET <span class="title">socket</span><span class="params">( </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> af,          <span class="comment">//指定应用程序使用的通信协议的协议族，对于TCP/IP协议族，该参数置AF_INET; UNIX系统支持的地址族有：AF_UNIX、AF_INET、AF_NS等，而DOS、WINDOWS中仅支持AF_INET，它是网际网区域。</span></span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> type,         <span class="comment">//套接字类型</span></span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> protocol        <span class="comment">//应用程序所使用的通信协议</span></span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>应用程序调用socket函数来创建一个能够进行网络通信的套接字。第一个参数指定应用程序使用的通信协议的协议族，对于TCP/IP协议族，该参数置PF_INET;第二个参数指定要创建的套接字类型，流套接字类型为SOCK_STREAM、数据报套接字类型为SOCK_DGRAM；第三个参数指定应用程序所使用的通信协议。该函数如果调用成功就返回新创建的套接字的描述符，如果失败就返回INVALID_SOCKET。套接字描述符是一个整数类型的值。每个进程的进程空间里都有一个套接字描述符表，该表中存放着套接字描述符和套接字数据结构的对应关系。该表中有一个字段存放新创建的套接字的描述符，另一个字段存放套接字数据结构的地址，因此根据套接字描述符就可以找到其对应的套接字数据结构。每个进程在自己的进程空间里都有一个套接字描述符表但是套接字数据结构都是在操作系统的内核缓冲里。下面是一个创建流套接字的例子：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">protoent</span> *<span class="title">ppe</span>;</span> </span><br><span class="line"></span><br><span class="line">ppe=getprotobyname(<span class="string">"tcp"</span>); </span><br><span class="line"></span><br><span class="line">SOCKET ListenSocket=socket(PF_INET,SOCK_STREAM,ppe-&gt;p_proto);</span><br></pre></td></tr></table></figure><h3 id="四、closesocket函数"><a href="#四、closesocket函数" class="headerlink" title="四、closesocket函数"></a>四、closesocket函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">closesocket</span><span class="params">( </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">SOCKET s </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>closesocket函数用来关闭一个描述符为s的套接字。由于每个进程中都有一个套接字描述符表，表中的每个套接字描述符都对应了一个位于操作系统缓冲区中的套接字数据结构，因此有可能有几个套接字描述符指向同一个套接字数据结构。套接字数据结构中专门有一个字段存放该结构的被引用次数，即有多少个套接字描述符指向该结构。当调用closesocket函数时，操作系统先检查套接字数据结构中的该字段的值，如果为1，就表明只有一个套接字描述符指向它，因此操作系统就先把s在套接字描述符表中对应的那条表项清除，并且释放s对应的套接字数据结构；如果该字段大于1，那么操作系统仅仅清除s在套接字描述符表中的对应表项，并且把s对应的套接字数据结构的引用次数减1。 </p><p>closesocket函数如果执行成功就返回0，否则返回SOCKET_ERROR。 </p><h3 id="五、send函数"><a href="#五、send函数" class="headerlink" title="五、send函数"></a>五、send函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">send</span><span class="params">( </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">SOCKET s,                   <span class="comment">//指定发送端套接字描述符</span></span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">const</span> <span class="keyword">char</span> FAR *buf,         <span class="comment">//一个存放应用程序要发送数据的缓冲区</span></span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> len,              <span class="comment">//实际要发送的数据的字节数</span></span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> flags </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>不论是客户还是服务器应用程序都用send函数来向TCP连接的另一端发送数据。客户程序一般用send函数向服务器发送请求，而服务器则通常用send函数来向客户程序发送应答。该函数的第一个参数指定发送端套接字描述符；第二个参数指明一个存放应用程序要发送数据的缓冲区；第三个参数指明实际要发送的数据的字节数；第四个参数一般置0。这里只描述同步Socket的send函数的执行流程。当调用该函数时，send先比较待发送数据的长度len和套接字s的发送缓冲区的长度，如果len大于s的发送缓冲区的长度，该函数返回SOCKET_ERROR；如果len小于或者等于s的发送缓冲区的长度，那么send先检查协议是否正在发送s的发送缓冲中的数据，如果是就等待协议把数据发送完，如果协议还没有开始发送s的发送缓冲中的数据或者s的发送缓冲中没有数据，那么send就比较s的发送缓冲区的剩余空间和len，如果len大于剩余空间大小send就一直等待协议把s的发送缓冲中的数据发送完，如果len小于剩余空间大小send就仅仅把buf中的数据copy到剩余空间里（注意并不是send把s的发送缓冲中的数据传到连接的另一端的，而是协议传的，send仅仅是把buf中的数据copy到s的发送缓冲区的剩余空间里）。如果send函数copy数据成功，就返回实际copy的字节数，如果send在copy数据时出现错误，那么send就返回SOCKET_ERROR；如果send在等待协议传送数据时网络断开的话，那么send函数也返回SOCKET_ERROR。要注意send函数把buf中的数据成功copy到s的发送缓冲的剩余空间里后它就返回了，但是此时这些数据并不一定马上被传到连接的另一端。如果协议在后续的传送过程中出现网络错误的话，那么下一个Socket函数就会返回SOCKET_ERROR。（每一个除send外的Socket函数在执行的最开始总要先等待套接字的发送缓冲中的数据被协议传送完毕才能继续，如果在等待时出现网络错误，那么该Socket函数就返回SOCKET_ERROR）<br>注意：在Unix系统下，如果send在等待协议传送数据时网络断开的话，调用send的进程会接收到一个SIGPIPE信号，进程对该信号的默认处理是进程终止。 </p><h3 id="六、recv函数"><a href="#六、recv函数" class="headerlink" title="六、recv函数"></a>六、recv函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">recv</span><span class="params">( </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">SOCKET s, </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">char</span> FAR *buf, </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> len, </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> flags </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>不论是客户还是服务器应用程序都用recv函数从TCP连接的另一端接收数据。该函数的第一个参数指定接收端套接字描述符；第二个参数指明一个缓冲区，该缓冲区用来存放recv函数接收到的数据；第三个参数指明buf的长度；第四个参数一般置0。这里只描述同步Socket的recv函数的执行流程。当应用程序调用recv函数时，recv先等待s的发送缓冲中的数据被协议传送完毕，如果协议在传送s的发送缓冲中的数据时出现网络错误，那么recv函数返回SOCKET_ERROR，如果s的发送缓冲中没有数据或者数据被协议成功发送完毕后，recv先检查套接字s的接收缓冲区，如果s接收缓冲区中没有数据或者协议正在接收数据，那么recv就一直等待，只到协议把数据接收完毕。当协议把数据接收完毕，recv函数就把s的接收缓冲中的数据copy到buf中（注意协议接收到的数据可能大于buf的长度，所以在这种情况下要调用几次recv函数才能把s的接收缓冲中的数据copy完。recv函数仅仅是copy数据，真正的接收数据是协议来完成的），recv函数返回其实际copy的字节数。如果recv在copy时出错，那么它返回SOCKET_ERROR；如果recv函数在等待协议接收数据时网络中断了，那么它返回0。 </p><p>注意：在Unix系统下，如果recv函数在等待协议接收数据时网络断开了，那么调用recv的进程会接收到一个SIGPIPE信号，进程对该信号的默认处理是进程终止。 </p><h3 id="七、bind函数"><a href="#七、bind函数" class="headerlink" title="七、bind函数"></a>七、bind函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bind</span><span class="params">( </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">SOCKET s, </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">const</span> struct sockaddr FAR *name, </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> namelen </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>当创建了一个Socket以后，套接字数据结构中有一个默认的IP地址和默认的端口号。一个服务程序必须调用bind函数来给其绑定一个IP地址和一个特定的端口号。客户程序一般不必调用bind函数来为其Socket绑定IP地址和断口号。该函数的第一个参数指定待绑定的Socket描述符；第二个参数指定一个sockaddr结构，该结构是这样定义的： </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr</span> &#123;</span></span><br><span class="line"></span><br><span class="line">u_short sa_family;            <span class="comment">//地址族 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> sa_data[<span class="number">14</span>];             <span class="comment">// 14字节协议地址</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>sa_family指定地址族，对于TCP/IP协议族的套接字，给其置AF_INET。当对TCP/IP协议族的套接字进行绑定时，我们通常使用另一个地址结构：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> &#123;</span>          <span class="comment">// ("in" 代表 "Internet"。)</span></span><br><span class="line"></span><br><span class="line">short sin_family; </span><br><span class="line"></span><br><span class="line">u_short sin_port;         <span class="comment">// 16位端口号，网络字节顺序</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">in_addr</span> <span class="title">sin_addr</span>;</span>       <span class="comment">// 32位IP地址，网络字节顺序</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> sin_zero[<span class="number">8</span>];          <span class="comment">//保留</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>其中sin_family置AF_INET；sin_port指明端口号；sin_addr结构体中只有一个唯一的字段s_addr，表示IP地址，该字段是一个整数，一般用函数inet_addr（）把字符串形式的IP地址转换成unsigned long型的整数值后再置给s_addr。有的服务器是多宿主机，至少有两个网卡，那么运行在这样的服务器上的服务程序在为其Socket绑定IP地址时可以把htonl(INADDR_ANY)置给s_addr，这样做的好处是不论哪个网段上的客户程序都能与该服务程序通信；如果只给运行在多宿主机上的服务程序的Socket绑定一个固定的IP地址，那么就只有与该IP地址处于同一个网段上的客户程序才能与该服务程序通信。我们用0来填充sin_zero数组，目的是让sockaddr_in结构的大小与sockaddr结构的大小一致。下面是一个bind函数调用的例子： </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">saddr</span>； </span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">saddr</span>.<span class="title">sin_family</span> = <span class="title">AF_INET</span>;</span> </span><br><span class="line"></span><br><span class="line">saddr.sin_port = htons(<span class="number">8888</span>);     <span class="comment">// Host to Network Short</span></span><br><span class="line"></span><br><span class="line">saddr.sin_addr.s_addr = htonl(INADDR_ANY); <span class="comment">//使用htonl将IP地址转换为网络格式，INADDR_ANY自动填上它所运行的机器的 IP 地址</span></span><br><span class="line"></span><br><span class="line">bind(ListenSocket,(struct sockaddr *)&amp;saddr,<span class="keyword">sizeof</span>(saddr))；</span><br></pre></td></tr></table></figure><p>注意：不同的计算机存放多字节值的顺序不同，有的机器在起始地址存放低位字节（低价先存），有的存高位字节（高价先存）。为保证数据的正确性，在网络协议中须指定网络字节顺序。TCP/IP协议使用16位整数和32位整数的高价先存格式，它们均含在协议头文件中。</p><p>在调用 bind() 的时候，要小心的另一件事情是：不要采用小于 1024的端口号。所有小于1024的端口号都被系统保留！可以选择从1024 到65535的端口(如果它们没有被别的程序使用的话)。</p><h3 id="八、listen函数"><a href="#八、listen函数" class="headerlink" title="八、listen函数"></a>八、listen函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">listen</span><span class="params">( SOCKET s, <span class="keyword">int</span> backlog )</span></span>;</span><br></pre></td></tr></table></figure><p>服务程序可以调用listen函数使其流套接字s处于监听状态。处于监听状态的流套接字s将维护一个客户连接请求队列，该队列最多容纳backlog个客户连接请求。假如该函数执行成功，则返回0；如果执行失败，则返回SOCKET_ERROR。 </p><h3 id="九、accept函数"><a href="#九、accept函数" class="headerlink" title="九、accept函数"></a>九、accept函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">SOCKET <span class="title">accept</span><span class="params">( </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">SOCKET s, </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">struct sockaddr FAR *addr,          <span class="comment">//返回新创建的套接字的地址结构</span></span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> FAR *addrlen              <span class="comment">//新创建的套接字的地址结构的长度</span></span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>服务程序调用accept函数从处于监听状态的流套接字s的客户连接请求队列中取出排在最前的一个客户请求，并且创建一个新的套接字来与客户套接字创建连接通道，如果连接成功，就返回新创建的套接字的描述符，以后与客户套接字交换数据的是新创建的套接字；如果失败就返回INVALID_SOCKET。该函数的第一个参数指定处于监听状态的流套接字；操作系统利用第二个参数来返回新创建的套接字的地址结构；操作系统利用第三个参数来返回新创建的套接字的地址结构的长度。下面是一个调用accept的例子： </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">ServerSocketAddr</span>;</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> addrlen; </span><br><span class="line"></span><br><span class="line">addrlen=<span class="keyword">sizeof</span>(ServerSocketAddr); </span><br><span class="line"></span><br><span class="line">ServerSocket=accept(ListenSocket,(struct sockaddr *)&amp;ServerSocketAddr,&amp;addrlen);</span><br></pre></td></tr></table></figure><h3 id="十、connect函数"><a href="#十、connect函数" class="headerlink" title="十、connect函数"></a>十、connect函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">connect</span><span class="params">( </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">SOCKET s, </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">const</span> struct sockaddr FAR *name,</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> namelen </span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>客户程序调用connect函数来使客户Socket s与监听于name所指定的计算机的特定端口上的服务Socket进行连接。如果连接成功，connect返回0；如果失败则返回SOCKET_ERROR。下面是一个例子：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">daddr</span>;</span> </span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>((<span class="keyword">void</span> *)&amp;daddr,<span class="number">0</span>,<span class="keyword">sizeof</span>(daddr)); </span><br><span class="line"></span><br><span class="line">daddr.sin_family=AF_INET; </span><br><span class="line"></span><br><span class="line">daddr.sin_port=htons(<span class="number">8888</span>); </span><br><span class="line"></span><br><span class="line">daddr.sin_addr.s_addr=inet_addr(<span class="string">"133.197.22.4"</span>);  <span class="comment">//函数inet_addr(),将IP地址从 点数格式转换成无符号长整型， inet_addr()返回的地址已经是网络字节格式</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">connect</span>(ClientSocket,(struct sockaddr *)&amp;daddr,<span class="keyword">sizeof</span>(daddr));</span><br></pre></td></tr></table></figure><h1 id="实例基本步骤"><a href="#实例基本步骤" class="headerlink" title="实例基本步骤"></a>实例基本步骤</h1><p>设计一个基本的网络服务器有以下几个步骤：</p><p>1、初始化Windows Socket</p><p>2、创建一个监听的Socket</p><p>3、设置服务器地址信息，并将监听端口绑定到这个地址上</p><p>4、开始监听</p><p>5、接受客户端连接</p><p>6、和客户端通信</p><p>7、结束服务并清理Windows Socket和相关数据，或者返回第4步</p><h1 id="入门代码-C语言版"><a href="#入门代码-C语言版" class="headerlink" title="入门代码(C语言版)"></a>入门代码(C语言版)</h1><p>下面是简单的服务器和客户端源代码。（阻塞模式下的，供初学者理解）</p><h3 id="TCPServer"><a href="#TCPServer" class="headerlink" title="TCPServer"></a>TCPServer</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  WSADATA        wsaData;</span><br><span class="line"></span><br><span class="line">  SOCKET        ListeningSocket;</span><br><span class="line"></span><br><span class="line">  SOCKET        NewConnection;</span><br><span class="line"></span><br><span class="line">  SOCKADDR_IN      ServerAddr;</span><br><span class="line"></span><br><span class="line">  SOCKADDR_IN      ClientAddr;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span>          Port = <span class="number">5150</span>;</span><br><span class="line"></span><br><span class="line">  WSAStartup(MAKEWORD(<span class="number">2</span>,<span class="number">2</span>), &amp;wsaData); <span class="comment">// 初始化Windows Socket 2.2</span></span><br><span class="line"></span><br><span class="line">  ListeningSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP); <span class="comment">// 创建一个新的Socket来响应客户端的连接请求</span></span><br><span class="line"></span><br><span class="line">  ServerAddr.sin_family = AF_INET; <span class="comment">// 填写服务器地址信息</span></span><br><span class="line"></span><br><span class="line">  ServerAddr.sin_port = htons(Port);   <span class="comment">// 端口为5150</span></span><br><span class="line"></span><br><span class="line">  ServerAddr.sin_addr.s_addr = htonl(INADDR_ANY); <span class="comment">// IP地址为INADDR_ANY，注意使用htonl将IP地址转换为网络格式</span></span><br><span class="line"></span><br><span class="line">  bind(ListeningSocket, (SOCKADDR *)&amp;ServerAddr, <span class="keyword">sizeof</span>(ServerAddr)); <span class="comment">// 绑定监听端口 listen(ListeningSocket, 5); // 开始监听，指定最大同时连接数为5 </span></span><br><span class="line"></span><br><span class="line">  NewConnection = accept(ListeningSocket, (SOCKADDR *) &amp;ClientAddr,&amp;ClientAddrLen)); <span class="comment">// 接受新的连接</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 新的连接建立后，就可以互相通信了，在这个简单的例子中，我们直接关闭连接，</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 并关闭监听Socket，然后退出应用程序</span></span><br><span class="line"></span><br><span class="line">  closesocket(NewConnection);</span><br><span class="line"></span><br><span class="line">  closesocket(ListeningSocket);</span><br><span class="line"></span><br><span class="line">  WSACleanup();<span class="comment">// 释放Windows Socket DLL的相关资源</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="TCPClient"><a href="#TCPClient" class="headerlink" title="TCPClient"></a>TCPClient</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  WSADATA        wsaData;</span><br><span class="line"></span><br><span class="line">  SOCKET        s;</span><br><span class="line"></span><br><span class="line">  SOCKADDR_IN      ServerAddr;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span>          Port = <span class="number">5150</span>;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  WSAStartup(MAKEWORD(<span class="number">2</span>,<span class="number">2</span>), &amp;wsaData);  <span class="comment">//初始化Windows Socket 2.2</span></span><br><span class="line"></span><br><span class="line">  s = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);  <span class="comment">// 创建一个新的Socket来连接服务器</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 填写客户端地址信息</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 端口为5150</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 服务器IP地址为"136.149.3.29"，注意使用inet_addr将IP地址转换为网络格式</span></span><br><span class="line"></span><br><span class="line">  ServerAddr.sin_family = AF_INET;</span><br><span class="line"></span><br><span class="line">   ServerAddr.sin_port = htons(Port);   </span><br><span class="line"></span><br><span class="line">   ServerAddr.sin_addr.s_addr = inet_addr(<span class="string">"136.149.3.29"</span>);</span><br><span class="line"></span><br><span class="line">   <span class="built_in">connect</span>(s, (SOCKADDR *) &amp;ServerAddr, <span class="keyword">sizeof</span>(ServerAddr));    <span class="comment">// 向服务器发出连接请求</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 新的连接建立后，就可以互相通信了，在这个简单的例子中，我们直接关闭连接，</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 并关闭监听Socket，然后退出应用程序</span></span><br><span class="line"></span><br><span class="line">   closesocket(s);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 释放Windows Socket DLL的相关资源</span></span><br><span class="line"></span><br><span class="line">   WSACleanup();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="计算机网络" scheme="http://www.red0819.top/categories/computernetwork/"/>
    
    
    <category term="socket" scheme="http://www.red0819.top/tags/socket/"/>
    
  </entry>
  
</feed>
